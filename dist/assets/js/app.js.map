{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/assets/js/app/app.js","app.js","src/assets/js/app/gpgpu.js","src/assets/js/libs/stats.min.js","src/assets/js/main.js","src/assets/js/utils/loader.js","src/assets/js/utils/three-utils.js","src/assets/js/utils/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_utils","_threeUtils","_loader","_loader2","_gpgpu","_gpgpu2","Stats","scope","scene","camera","renderer","gpgpu","mesh","tOriginalPositions","tPositions","tData","simulationMaterial","renderMaterial","stats","App","this","createBaseElements","addListeners","manifest","file","id","loadAssets","assets","createScene","handleResize","update","callback","loader","load","width","window","innerWidth","height","innerHeight","THREE","Scene","PerspectiveCamera","position","z","WebGLRenderer","setClearColor","setSize","document","body","appendChild","domElement","texSize","format","RGBAFormat","channels","RGBFormat","len","data1","Float32Array","data2","size","randomRange","randomInt","getDataTexture","ShaderMaterial","uniforms","type","curlScale","amplitude","time","vertexShader","fragmentShader","map","textures","particle","pointSize","transparent","blending","AdditiveBlending","depthTest","depthWrite","vertices","_i","Math","floor","geo","BufferGeometry","addAttribute","BufferAttribute","Points","add","addEventListener","removeEventListener","style","left","bottom","effectsManager","EffectsManager","aspect","updateProjectionMatrix","rotation","y","render","requestAnimationFrame","removeListeners","../libs/stats.min","../utils/loader","../utils/three-utils","../utils/utils","./gpgpu","2","rtt1","rtt2","flip","GPGPU","_ref","_ref$size","undefined","_ref$format","gl","getContext","getExtension","alert","getParameter","MAX_VERTEX_TEXTURE_IMAGE_UNITS","OrthographicCamera","Mesh","PlaneBufferGeometry","options","minFilter","NearestFilter","magFilter","FloatType","stencil","WebGLRenderTarget","clone","propertyName","texture","3","_typeof","Symbol","iterator","constructor","b","createElement","cssText","c","d","innerHTML","toUpperCase","m","children","display","p","firstChild","min","q","self","performance","now","bind","Date","k","preventDefault","Infinity","v","A","B","g","w","x","C","D","memory","h","E","F","REVISION","setMode","begin","end","max","textContent","round","usedJSHeapSize","jsHeapSizeLimit","4","_app","_app2","./app/app","5","interval","loadInfo","files","numFiles","numLoaded","progressCallback","loadCallback","loadCheck","done","Loader","geometry","fonts","data","checkLoaded","onLoadCallback","onProgressCallback","forEach","fileObj","toString","indexOf","loadTexture","isData","loadDataJSON","isFont","loadFontJSON","loadGeometryJSON","loadCollada","loadCubemap","setInterval","xhr","XMLHttpRequest","overrideMimeType","open","onreadystatechange","readyState","status","JSON","parse","responseText","send","JSONLoader","loaded","total","FontLoader","font","ColladaLoader","collada","TextureLoader","CubeTextureLoader","clearInterval","info","parseInt","6","degreesToRads","degrees","PI","radsToDegrees","radians","tex","DataTexture","generateMipmaps","needsUpdate","createPlane","color","PlaneGeometry","MeshBasicMaterial","random","rotateAroundWorldAxisX","object","matrix","Matrix4","makeRotationX","multiply","setFromRotationMatrix","rotateAroundWorldAxisY","makeRotationY","rotateAroundWorldAxisZ","makeRotationZ","rotateAroundWorldAxis","axis","rotWorldMatrix","makeRotationAxis","normalize","setScale","scale","set","disposeOfMesh","parent","remove","dispose","material","disposeOfChildren","removeAllChildren","object3d","moveTowards","easing","moveVectorTowards","v1","v2","rotateTowards","updateCameraMatrices","updateMatrix","updateMatrixWorld","matrixWorldInverse","getInverse","matrixWorld","meshIsInView","frustum","Frustum","setFromMatrix","multiplyMatrices","projectionMatrix","intersectsObject","getMouseIntersection","mouse","objects","raycaster","Raycaster","setFromCamera","intersections","intersectObjects","objectWorldPositionToScreen","widthHalf","heightHalf","vector","Vector3","setFromMatrixPosition","project","objectWorldPositionToScreenAlt","pos","projScreenMat","applyMatrix4","worldToScreen","copy","screenToWorld","unproject","dir","sub","distance","multiplyScalar","screenToWorldAtZ","planeZ","Plane","ray","intersectPlane","getMouseWorldPos","mouseScreenPos","vec","getMouseWorldPosAtZ","pickingRay","getEdges","edge","hash","keys","geometry2","thresholdDot","cos","degToRad","sortFunction","Geometry","fromBufferGeometry","mergeVertices","computeFaceNormals","faces","facesOriginal","face","j","sort","vert1","vert2","face1","face2","edges","normal","dot","push","vertex1","vertex2","faceIndex1","faceIndex2","addFragmentFogInjections","lines","split","_i2","ShaderChunk","join","pointOnSphere","a1","a2","sin","getPointsOnSphere","pts","pt","_i3","getPointsWithinSphere","maxRadius","_i4","getPointsOnSphereEvenly","inc","sqrt","off","phi","getRandomVector3","addRandomVector3","rotationInDegrees","Euler","order","loadJSONGeometry","geometriesById","geometries","loadTextures","texturesById","crossOrigin","setTextureWrapping","wrapping","_i5","wrapS","wrapT","setTextureMipmapping","mipmapping","_i6","setTextureMinMagFilters","_i7","injectShaderCode","original","injection","replacement","_i8","replace","logVector","console","log","logProgramInfo","program","result","attributes","attributeCount","uniformCount","activeUniforms","getProgramParameter","ACTIVE_UNIFORMS","activeAttributes","ACTIVE_ATTRIBUTES","enums","35664","35665","35666","35667","35668","35669","35670","35671","35672","35673","35674","35675","35676","35678","35680","5120","5121","5122","5123","5124","5125","5126","_i9","uniform","getActiveUniform","typeName","attribute","getActiveAttrib","axisUp","axisDown","axisLeft","axisRight","axisForward","axisBackward","7","classNames","content","el","name","classList","lerp","norm","sourceMin","sourceMax","destMin","destMax","clamp","p0","p1","dx","dy","distanceXY","x0","y0","x1","y1","circleCollision","c0","c1","radius","circlePointCollision","circle","pointInRect","rect","inRange","rangeIntersect","min0","max0","min1","max1","rectIntersect","r0","r1","angleBetweenPoints","p2","atan2","roundToPlaces","places","mult","pow","roundNearest","nearest","quadraticBezier","pFinal","cubicBezier","p3","multicurve","points","context","midx","midy","moveTo","quadraticCurveTo","stringify","isArray","arg","shuffleArray","array","currentIndex","temporaryValue","randomIndex","thinOutArray","newArray","randomItemFromArray","arrayRestrictedToRangeZ","minZ","maxZ","extractKeyFromArray","repeat","params","intervals","delay","startDelay","doStuff","setTimeout","isOpera","opera","navigator","userAgent","isFirefox","InstallTrigger","isSafari","HTMLElement","isChrome","chrome","isIE","documentMode","isMac","platform","toLowerCase","isWindows","hasWebGL","WebGLRenderingContext","canvas","names","getVideoType","dispatchEvent","eventName","config","event","createEvent","initCustomEvent","CustomEvent","detail","setCursor","cursor","element","getParameterByName","regex","RegExp","results","exec","location","search","decodeURIComponent"],"mappings":"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ACvBpC,EAAOE,gBAAkBkC,EAAUjZ,KAGvCyW,QAAQC,IAAIG,GLpnBHxb,OAAOC,eAAed,EAAQ,cAAce,OAAM,IAAOf,EKnBtDgR,cAAAA,ELmB0FhR,EKd1FmR,cAAAA,ELc8HnR,EKT9H2F,eAAAA,ELSoK3F,EKCpKyR,YAAAA,ELDoMzR,EKmBpMyF,YAAAA,ELnBoOzF,EKwBpO8R,uBAAAA,ELxB0R9R,EKiC1RqS,uBAAAA,ELjCgVrS,EK0ChVuS,uBAAAA,EL1CsYvS,EKmDtYyS,sBAAAA,ELnD0bzS,EK4D1b8S,SAAAA,EL5Dod9S,EKiEpdiT,cAAAA,ELjEwfjT,EKiFxfsT,kBAAAA,ELjFoiBtT,EK6FpiBuT,kBAAAA,EL7FglBvT,EKqGhlByT,YAAAA,ELrGgnBzT,EK4GhnB2T,kBAAAA,EL5G4pB3T,EKmH5pB8T,cAAAA,ELnHgsB9T,EK0HhsB+T,qBAAAA,EL1HkvB/T,EKiIlvBqU,aAAAA,ELjIoxBrU,EK6IpxB4U,qBAAAA,EL7Is0B5U,EKsJt0BoV,4BAAAA,ELtJs4BpV,EKsKt4B2V,+BAAAA,ELtK48B3V,EK0L58B+V,cAAAA,EL1Lg/B/V,EK6Mh/BiW,cAAAA,EL7MohCjW,EK6NphCuW,iBAAAA,EL7N8jCvW,EKqP9jC4W,iBAAAA,ELrPwmC5W,EK8PxmC+W,oBAAAA,EL9PwpC/W,EKyQxpCiX,SAAAA,ELzQkrCjX,EK2UlrC+Y,yBAAAA,EL3U4uC/Y,EK2V5uCqZ,cAAAA,EL3VgxCrZ,EKoWhxCyZ,kBAAAA,ELpW4zCzZ,EKkX5zC6Z,sBAAAA,ELlXg3C7Z,EKgYh3Cga,wBAAAA,ELhYw6Cha,EKoZx6Cqa,iBAAAA,ELpZk9Cra,EKyZl9Csa,iBAAAA,ELzZ4/Cta,EK8Z5/Cua,kBAAAA,EL9ZwiDva,EKoaxiD0a,iBAAAA,ELpaklD1a,EK0cllD6a,aAAAA,EL1conD7a,EKugBpnDgb,mBAAAA,ELvgBkqDhb,EKghBlqDqb,qBAAAA,ELhhBotDrb,EKyhBptDwb,wBAAAA,ELzhB4wDxb,EKuiB5wD0b,iBAAAA,ELviBszD1b,EKyjBtzDgc,UAAAA,ELzjBk1Dhc,EK+jBl1Dm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EMlC5Q2gB,qBAAAA,ENkC8T3gB,EM9B9T6gB,YAAAA,EN8B8V7gB,EMzB9V+gB,QAAAA,ENyBsX/gB,EMrBtXghB,eAAAA,ENqB4ZhhB,EMhB5ZqhB,cAAAA,ENgBgcrhB,EMXhcgR,cAAAA,ENWoehR,EMPpemR,cAAAA,ENOwgBnR,EMHxgBwhB,mBAAAA,ENGsjBxhB,EMCtjByF,YAAAA,ENDslBzF,EMKtlB0F,UAAAA,ENLknB1F,EMSlnB2hB,cAAAA,ENTspB3hB,EMctpB+hB,aAAAA,ENdwrB/hB,EMkBxrBiiB,gBAAAA,ENlBguBjiB,EM6BhuBmiB,YAAAA,EN7BgwBniB,EM0ChwBqiB,WAAAA,EN1C8xBriB,EM4D9xBqZ,cAAAA,EN5Dk0BrZ,EMoEl0ByZ,kBAAAA,ENpE82BzZ,EMiF92Bga,wBAAAA,ENjFs6Bha,EMoGt6BmK,MAAAA,ENpG07BnK,EMwG17B6iB,QAAAA,ENxGk9B7iB,EM4Gl9B+iB,aAAAA,EN5Go/B/iB,EM6Hp/BojB,aAAAA,EN7HshCpjB,EMyIthCsjB,oBAAAA,ENzIskCtjB,EM6ItkCujB,wBAAAA,EN7I8nCvjB,EM0J9nC0jB,oBAAAA,EN1J8qC1jB,EMoK9qC2jB,OAAAA,ENpKosC3jB,EMoLpsCkkB,QAAAA,ENpL4tClkB,EMyL5tCskB,UAAAA,ENzLwvCtkB,EM8LxvCwkB,SAAAA,EN9LkxCxkB,EMmMlxC0kB,SAAAA,ENnM4yC1kB,EMwM5yC4kB,KAAAA,ENxM8zC5kB,EM6M9zC8kB,MAAAA,EN7Mk1C9kB,EMiNl1CilB,UAAAA,ENjN82CjlB,EMqN92CklB,SAAAA,ENrNw4CllB,EM2Ox4CslB,aAAAA,EN3O06CtlB,EMqP16CulB,cAAAA;ANrP88CvlB,EM0Q98C+lB,UAAAA,EN1Q0+C/lB,EMoR1+CkmB,mBAAAA,YN1QL","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nimport {randomRange, randomInt} from '../utils/utils';\nimport {getDataTexture, getMouseWorldPos} from '../utils/three-utils';\nimport Loader from '../utils/loader';\nimport GPGPU from './gpgpu';\n\nconst glslify = require('glslify');\nconst Stats = require('../libs/stats.min');\n\nlet scope,\n    scene,\n    camera,\n    renderer,\n    container,\n    gpgpu,\n    mesh,\n    tOriginalPositions,\n    tPositions,\n    tData,\n    simulationMaterial,\n    renderMaterial,\n    stats;\n\nexport default class App\n{\n    constructor()\n    {\n        scope = this;\n\n        this.createBaseElements();\n        this.addListeners();\n        // this.addStats();\n\n        const manifest = [\n            {file:'assets/img/particle.png', id:'particle'}\n        ];\n        this.loadAssets(manifest, function(assets){\n            scope.createScene(assets);\n            scope.handleResize();\n            scope.update();\n        });\n    }\n\n    loadAssets(manifest, callback)\n    {\n        const loader = new Loader();\n\n        loader.load(manifest, assets => {\n            if(typeof callback === 'function')\n            {\n                callback(assets);\n            }\n        });\n    }\n\n    createBaseElements()\n    {\n        let width = window.innerWidth,\n            height = window.innerHeight;\n\n        scene = new THREE.Scene();\n        camera = new THREE.PerspectiveCamera(50, width / height, 0.1, 1000);\n        camera.position.z = 350;\n\n        renderer = new THREE.WebGLRenderer();\n        renderer.setClearColor(0x121212, 1);\n        renderer.setSize(width, height);\n        document.body.appendChild(renderer.domElement);\n    }\n\n    createScene(assets)\n    {\n        let texSize = 512,\n            format = THREE.RGBAFormat,\n            channels = format === THREE.RGBFormat ? 3 : 4,\n            len = texSize * texSize * channels,\n            data1 = new Float32Array(len),\n            data2 = new Float32Array(len),\n            size = 50;\n\n        for (var i = 0; i < len; i += channels)\n        {\n            data1[i + 0] = randomRange(-size, size);\n            data1[i + 1] = randomRange(-size, size);\n            data1[i + 2] = randomRange(-size, size);\n            data1[i + 3] = 0;\n\n            data2[i + 0] = randomRange(0.1, 0.9);\n            data2[i + 1] = randomInt(1, 3);\n            data2[i + 2] = 0;\n            data2[i + 3] = 0;\n        }\n\n        tOriginalPositions = getDataTexture(data1, texSize, texSize, format);\n        tPositions = getDataTexture(data1, texSize, texSize, format);\n        tData = getDataTexture(data2, texSize, texSize, format);\n\n        simulationMaterial = new THREE.ShaderMaterial({\n            uniforms: {\n                tOriginalPositions: {type:'t', value:tOriginalPositions},\n                tPositions: {type:'t', value:tPositions},\n                tData: {type:'t', value:tData},\n                curlScale: {type:'f', value:1.5},\n                amplitude: {type:'f', value:125},\n                time: {type:'f', value:0}\n            },\n            vertexShader: glslify('../../glsl/sim-vertex.glsl'),\n            fragmentShader: glslify('../../glsl/sim-fragment.glsl')\n        });\n\n        renderMaterial = new THREE.ShaderMaterial({\n            uniforms: {\n                tOriginalPositions: {type:'t', value:tOriginalPositions},\n                tPositions: {type:'t', value:tPositions},\n                tData: {type:'t', value:tData},\n                map: {type:'t', value:assets.textures.particle},\n                pointSize: {type:'f', value:1},\n                texSize: {type:'f', value:texSize}\n            },\n            vertexShader: glslify('../../glsl/render-vertex.glsl'),\n            fragmentShader: glslify('../../glsl/render-fragment.glsl'),\n            transparent: true,\n            blending: THREE.AdditiveBlending,\n            depthTest: false,\n            depthWrite: false,\n        });\n\n        // particles\n        len = texSize * texSize;\n        const vertices = new Float32Array(len * 3);\n        for(let i = 0; i < len; i++)\n        {\n            vertices[i * 3 + 0] = (i % texSize) / texSize;\n            vertices[i * 3 + 1] = Math.floor(i / texSize) / texSize;\n        }\n\n        let geo = new THREE.BufferGeometry();\n        geo.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n\n        mesh = new THREE.Points(geo, renderMaterial);\n        scene.add(mesh);\n\n        gpgpu = new GPGPU({\n            renderer: renderer,\n            simulationMaterial: simulationMaterial,\n            renderMaterial: renderMaterial,\n            size: texSize,\n            format: format\n        });\n    }\n\n    addListeners()\n    {\n        window.addEventListener('resize', this.handleResize, false);\n        window.addEventListener('orientationchange', this.handleResize, false);\n    }\n\n    removeListeners()\n    {\n        window.removeEventListener('resize', this.handleResize);\n        window.removeEventListener('orientationchange', this.handleResize);\n    }\n\n    addStats()\n    {\n        stats = new Stats();\n        stats.domElement.style.position = 'absolute';\n        stats.domElement.style.left = '0px';\n        stats.domElement.style.bottom = '0px';\n        document.body.appendChild(stats.domElement);\n    }\n\n    createEffects()\n    {\n        effectsManager = new EffectsManager({\n            renderer: renderer,\n            camera: camera,\n            scene: scene\n        });\n    }\n\n    handleResize(e)\n    {\n        let width = window.innerWidth,\n            height = window.innerHeight;\n\n        camera.aspect = width / height;\n\n        camera.updateProjectionMatrix();\n        renderer.setSize(width, height);\n    }\n\n    update()\n    {\n        simulationMaterial.uniforms.time.value += 0.001;\n\n        gpgpu.update('tPositions');\n\n        mesh.rotation.y += 0.01;\n\n        renderer.render(scene, camera);\n\n        if(stats)\n        {\n            stats.update();\n        }\n\n        requestAnimationFrame(scope.update);\n    }\n\n    dispose()\n    {\n        removeListeners();\n    }\n}","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _utils=require('../utils/utils');var _threeUtils=require('../utils/three-utils');var _loader=require('../utils/loader');var _loader2=_interopRequireDefault(_loader);var _gpgpu=require('./gpgpu');var _gpgpu2=_interopRequireDefault(_gpgpu);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var Stats=require('../libs/stats.min');var scope=void 0,scene=void 0,camera=void 0,renderer=void 0,container=void 0,gpgpu=void 0,mesh=void 0,tOriginalPositions=void 0,tPositions=void 0,tData=void 0,simulationMaterial=void 0,renderMaterial=void 0,stats=void 0;var App=function(){function App(){_classCallCheck(this,App);scope=this;this.createBaseElements();this.addListeners();// this.addStats();\nvar manifest=[{file:'assets/img/particle.png',id:'particle'}];this.loadAssets(manifest,function(assets){scope.createScene(assets);scope.handleResize();scope.update();});}_createClass(App,[{key:'loadAssets',value:function loadAssets(manifest,callback){var loader=new _loader2.default();loader.load(manifest,function(assets){if(typeof callback==='function'){callback(assets);}});}},{key:'createBaseElements',value:function createBaseElements(){var width=window.innerWidth,height=window.innerHeight;scene=new THREE.Scene();camera=new THREE.PerspectiveCamera(50,width/height,0.1,1000);camera.position.z=350;renderer=new THREE.WebGLRenderer();renderer.setClearColor(0x121212,1);renderer.setSize(width,height);document.body.appendChild(renderer.domElement);}},{key:'createScene',value:function createScene(assets){var texSize=512,format=THREE.RGBAFormat,channels=format===THREE.RGBFormat?3:4,len=texSize*texSize*channels,data1=new Float32Array(len),data2=new Float32Array(len),size=50;for(var i=0;i<len;i+=channels){data1[i+0]=(0,_utils.randomRange)(-size,size);data1[i+1]=(0,_utils.randomRange)(-size,size);data1[i+2]=(0,_utils.randomRange)(-size,size);data1[i+3]=0;data2[i+0]=(0,_utils.randomRange)(0.1,0.9);data2[i+1]=(0,_utils.randomInt)(1,3);data2[i+2]=0;data2[i+3]=0;}tOriginalPositions=(0,_threeUtils.getDataTexture)(data1,texSize,texSize,format);tPositions=(0,_threeUtils.getDataTexture)(data1,texSize,texSize,format);tData=(0,_threeUtils.getDataTexture)(data2,texSize,texSize,format);simulationMaterial=new THREE.ShaderMaterial({uniforms:{tOriginalPositions:{type:'t',value:tOriginalPositions},tPositions:{type:'t',value:tPositions},tData:{type:'t',value:tData},curlScale:{type:'f',value:1.5},amplitude:{type:'f',value:125},time:{type:'f',value:0}},vertexShader:\"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvoid main() {\\n    vUv = vec2(uv.x, 1.0 - uv.y);\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\",fragmentShader:\"#define GLSLIFY 1\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n  {\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i);\\n  vec4 p = permute( permute( permute(\\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\nvec3 snoiseVec3( vec3 x ){\\n\\n  float s  = snoise(vec3( x ));\\n  float s1 = snoise(vec3( x.y - 19.1 , x.z + 33.4 , x.x + 47.2 ));\\n  float s2 = snoise(vec3( x.z + 74.2 , x.x - 124.5 , x.y + 99.4 ));\\n  vec3 c = vec3( s , s1 , s2 );\\n  return c;\\n\\n}\\n\\nvec3 curlNoise( vec3 p ){\\n  \\n  const float e = .1;\\n  vec3 dx = vec3( e   , 0.0 , 0.0 );\\n  vec3 dy = vec3( 0.0 , e   , 0.0 );\\n  vec3 dz = vec3( 0.0 , 0.0 , e   );\\n\\n  vec3 p_x0 = snoiseVec3( p - dx );\\n  vec3 p_x1 = snoiseVec3( p + dx );\\n  vec3 p_y0 = snoiseVec3( p - dy );\\n  vec3 p_y1 = snoiseVec3( p + dy );\\n  vec3 p_z0 = snoiseVec3( p - dz );\\n  vec3 p_z1 = snoiseVec3( p + dz );\\n\\n  float x = p_y1.z - p_y0.z - p_z1.y + p_z0.y;\\n  float y = p_z1.x - p_z0.x - p_x1.z + p_x0.z;\\n  float z = p_x1.y - p_x0.y - p_y1.x + p_y0.x;\\n\\n  const float divisor = 1.0 / ( 2.0 * e );\\n  return normalize( vec3( x , y , z ) * divisor );\\n\\n}\\n\\nuniform sampler2D tOriginalPositions;\\nuniform sampler2D tPositions;\\nuniform sampler2D tData;\\nuniform float curlScale;\\nuniform float amplitude;\\nuniform float time;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\n    vec4 oPos = texture2D(tOriginalPositions, vUv);\\n    vec4 pos = texture2D(tPositions, vUv);\\n\\n    float dist = distance(oPos.xyz, pos.xyz);\\n\\n    if(dist > 150.0)\\n    {\\n        pos = oPos;\\n        pos.a = 0.0;\\n    }\\n    else\\n    {\\n        pos.xyz += curlNoise(pos.xyz / amplitude) * curlScale;\\n\\n        if(pos.a < 0.1)\\n        {\\n            pos.a += 0.001;\\n        }\\n    }\\n\\n    gl_FragColor = pos;\\n}\"});renderMaterial=new THREE.ShaderMaterial({uniforms:{tOriginalPositions:{type:'t',value:tOriginalPositions},tPositions:{type:'t',value:tPositions},tData:{type:'t',value:tData},map:{type:'t',value:assets.textures.particle},pointSize:{type:'f',value:1},texSize:{type:'f',value:texSize}},vertexShader:\"#define GLSLIFY 1\\nuniform sampler2D tOriginalPositions;\\nuniform sampler2D tPositions;//RenderTarget containing the transformed positions\\nuniform sampler2D tData;\\nuniform float pointSize;\\nuniform float texSize;\\n\\nvarying vec4 vPos;\\n// varying vec4 vOriginalPos;\\n\\nvoid main() {\\n\\n    vec2 uv = position.xy + vec2(0.5 / texSize, 0.5 / texSize);\\n    vec4 pos = texture2D(tPositions, uv);\\n    vPos = pos;\\n\\n    // vec4 oPos = texture2D(tOriginalPositions, uv);\\n    // vOriginalPos = oPos;\\n\\n    // vec4 pos = texture2D(tPositions, position.xy);\\n\\n    vec4 data = texture2D(tData, uv);\\n    // vec3 otherVals = texture2D(tData, position.xy).xyz;\\n\\n    //regular projection of our position\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos.xyz, 1.0);\\n\\n    //sets the point size\\n    // gl_PointSize = pointSize;\\n    // gl_PointSize = pos.a;\\n    gl_PointSize = data.y;\\n    // gl_PointSize = sin(pos.x) * data.y;\\n    // gl_PointSize = length(pos) * 0.025;\\n}\",fragmentShader:\"#define GLSLIFY 1\\nfloat hue2rgb(float f1, float f2, float hue) {\\n    if (hue < 0.0)\\n        hue += 1.0;\\n    else if (hue > 1.0)\\n        hue -= 1.0;\\n    float res;\\n    if ((6.0 * hue) < 1.0)\\n        res = f1 + (f2 - f1) * 6.0 * hue;\\n    else if ((2.0 * hue) < 1.0)\\n        res = f2;\\n    else if ((3.0 * hue) < 2.0)\\n        res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\\n    else\\n        res = f1;\\n    return res;\\n}\\n\\nvec3 hsl2rgb(vec3 hsl) {\\n    vec3 rgb;\\n    \\n    if (hsl.y == 0.0) {\\n        rgb = vec3(hsl.z); // Luminance\\n    } else {\\n        float f2;\\n        \\n        if (hsl.z < 0.5)\\n            f2 = hsl.z * (1.0 + hsl.y);\\n        else\\n            f2 = hsl.z + hsl.y - hsl.y * hsl.z;\\n            \\n        float f1 = 2.0 * hsl.z - f2;\\n        \\n        rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));\\n        rgb.g = hue2rgb(f1, f2, hsl.x);\\n        rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));\\n    }   \\n    return rgb;\\n}\\n\\nvec3 hsl2rgb(float h, float s, float l) {\\n    return hsl2rgb(vec3(h, s, l));\\n}\\n\\nuniform sampler2D map;\\nvarying vec4 vPos;\\n// varying vec4 vOriginalPos;\\n\\nvoid main()\\n{\\n    // vec3 rgb = hsl2rgb((vPos.x + vPos.y)/360.0, 1.0, 0.5);\\n    // float dist = distance(vOriginalPos.xyz, vPos.xyz) * 0.005;\\n    // float opacity = smoothstep(0.0, 0.5, dist) * 0.5;\\n    vec3 rgb = hsl2rgb(length(vPos)/150.0, 1.0, 0.65);\\n    // vec3 rgb = hsl2rgb(1.0 - (length(vPos)/180.0), 1.0, 0.5);\\n    gl_FragColor = vec4(rgb, vPos.a) * texture2D(map, gl_PointCoord);\\n    // gl_FragColor = vec4(rgb, vPos.a * sin(gl_FragCoord.x / 2.0)) * texture2D(map, gl_PointCoord);\\n\\n    if(vPos.a < 0.05)\\n    {\\n        discard;\\n    }\\n}\",transparent:true,blending:THREE.AdditiveBlending,depthTest:false,depthWrite:false});// particles\nlen=texSize*texSize;var vertices=new Float32Array(len*3);for(var _i=0;_i<len;_i++){vertices[_i*3+0]=_i%texSize/texSize;vertices[_i*3+1]=Math.floor(_i/texSize)/texSize;}var geo=new THREE.BufferGeometry();geo.addAttribute('position',new THREE.BufferAttribute(vertices,3));mesh=new THREE.Points(geo,renderMaterial);scene.add(mesh);gpgpu=new _gpgpu2.default({renderer:renderer,simulationMaterial:simulationMaterial,renderMaterial:renderMaterial,size:texSize,format:format});}},{key:'addListeners',value:function addListeners(){window.addEventListener('resize',this.handleResize,false);window.addEventListener('orientationchange',this.handleResize,false);}},{key:'removeListeners',value:function removeListeners(){window.removeEventListener('resize',this.handleResize);window.removeEventListener('orientationchange',this.handleResize);}},{key:'addStats',value:function addStats(){stats=new Stats();stats.domElement.style.position='absolute';stats.domElement.style.left='0px';stats.domElement.style.bottom='0px';document.body.appendChild(stats.domElement);}},{key:'createEffects',value:function createEffects(){effectsManager=new EffectsManager({renderer:renderer,camera:camera,scene:scene});}},{key:'handleResize',value:function handleResize(e){var width=window.innerWidth,height=window.innerHeight;camera.aspect=width/height;camera.updateProjectionMatrix();renderer.setSize(width,height);}},{key:'update',value:function update(){simulationMaterial.uniforms.time.value+=0.001;gpgpu.update('tPositions');mesh.rotation.y+=0.01;renderer.render(scene,camera);if(stats){stats.update();}requestAnimationFrame(scope.update);}},{key:'dispose',value:function dispose(){removeListeners();}}]);return App;}();exports.default=App;\n\n},{\"../libs/stats.min\":3,\"../utils/loader\":5,\"../utils/three-utils\":6,\"../utils/utils\":7,\"./gpgpu\":2}],2:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var scene=void 0,camera=void 0,mesh=void 0,rtt1=void 0,rtt2=void 0,flip=false;var GPGPU=function(){function GPGPU(_ref){var renderer=_ref.renderer;var simulationMaterial=_ref.simulationMaterial;var renderMaterial=_ref.renderMaterial;var _ref$size=_ref.size;var size=_ref$size===undefined?128:_ref$size;var _ref$format=_ref.format;var format=_ref$format===undefined?THREE.RGBFormat:_ref$format;_classCallCheck(this,GPGPU);var gl=renderer.getContext();if(!gl.getExtension('OES_texture_float')){alert('No OES_texture_float support for float textures!');return;}if(gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)===0){alert('No support for vertex shader textures!');return;}camera=new THREE.OrthographicCamera(-0.5,0.5,0.5,-0.5,0,1);scene=new THREE.Scene();mesh=new THREE.Mesh(new THREE.PlaneBufferGeometry(1,1),simulationMaterial);scene.add(mesh);var options={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,type:THREE.FloatType,format:format,// depth: false,\nstencil:false};rtt1=new THREE.WebGLRenderTarget(size,size,options);rtt2=rtt1.clone();this.renderer=renderer;this.simulationMaterial=simulationMaterial;this.renderMaterial=renderMaterial;}_createClass(GPGPU,[{key:'update',value:function update(propertyName){propertyName=propertyName||'tPositions';if(flip){this.renderer.render(scene,camera,rtt2,false);this.renderMaterial.uniforms[propertyName].value=rtt2.texture;this.simulationMaterial.uniforms[propertyName].value=rtt2.texture;}else{this.renderer.render(scene,camera,rtt1,false);this.renderMaterial.uniforms[propertyName].value=rtt1.texture;this.simulationMaterial.uniforms[propertyName].value=rtt1.texture;}flip=!flip;}}]);return GPGPU;}();exports.default=GPGPU;\n\n},{}],3:[function(require,module,exports){\n\"use strict\";var _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol?\"symbol\":typeof obj;};// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function Stats(){function f(a,e,b){a=document.createElement(a);a.id=e;a.style.cssText=b;return a;}function l(a,e,b){var c=f(\"div\",a,\"padding:0 0 3px 3px;text-align:left;background:\"+b),d=f(\"div\",a+\"Text\",\"font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px;color:\"+e);d.innerHTML=a.toUpperCase();c.appendChild(d);a=f(\"div\",a+\"Graph\",\"width:74px;height:30px;background:\"+e);c.appendChild(a);for(e=0;74>e;e++){a.appendChild(f(\"span\",\"\",\"width:1px;height:30px;float:left;opacity:0.9;background:\"+b));}return c;}function m(a){for(var b=c.children,d=0;d<b.length;d++){b[d].style.display=d===a?\"block\":\"none\";}n=a;}function p(a,b){a.appendChild(a.firstChild).style.height=Math.min(30,30-30*b)+\"px\";}var q=self.performance&&self.performance.now?self.performance.now.bind(performance):Date.now,k=q(),r=k,t=0,n=0,c=f(\"div\",\"stats\",\"width:80px;opacity:0.9;cursor:pointer\");c.addEventListener(\"mousedown\",function(a){a.preventDefault();m(++n%c.children.length);},!1);var d=0,u=Infinity,v=0,b=l(\"fps\",\"#0ff\",\"#002\"),A=b.children[0],B=b.children[1];c.appendChild(b);var g=0,w=Infinity,x=0,b=l(\"ms\",\"#0f0\",\"#020\"),C=b.children[0],D=b.children[1];c.appendChild(b);if(self.performance&&self.performance.memory){var h=0,y=Infinity,z=0,b=l(\"mb\",\"#f08\",\"#201\"),E=b.children[0],F=b.children[1];c.appendChild(b);}m(n);return{REVISION:14,domElement:c,setMode:m,begin:function begin(){k=q();},end:function end(){var a=q();g=a-k;w=Math.min(w,g);x=Math.max(x,g);C.textContent=(g|0)+\" MS (\"+(w|0)+\"-\"+(x|0)+\")\";p(D,g/200);t++;if(a>r+1E3&&(d=Math.round(1E3*t/(a-r)),u=Math.min(u,d),v=Math.max(v,d),A.textContent=d+\" FPS (\"+u+\"-\"+v+\")\",p(B,d/100),r=a,t=0,void 0!==h)){var b=performance.memory.usedJSHeapSize,c=performance.memory.jsHeapSizeLimit;h=Math.round(9.54E-7*b);y=Math.min(y,h);z=Math.max(z,h);E.textContent=h+\" MB (\"+y+\"-\"+z+\")\";p(F,b/c);}return a;},update:function update(){k=this.end();}};};\"object\"===(typeof module===\"undefined\"?\"undefined\":_typeof(module))&&(module.exports=Stats);\n\n},{}],4:[function(require,module,exports){\n'use strict';var _app=require('./app/app');var _app2=_interopRequireDefault(_app);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}document.addEventListener('DOMContentLoaded',function(){var app=new _app2.default();},false);\n\n},{\"./app/app\":1}],5:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var interval=void 0,loadInfo=void 0,files=void 0,numFiles=void 0,numLoaded=void 0,progressCallback=void 0,loadCallback=void 0,loadCheck=void 0,scope=void 0,done=false;var Loader=function(){function Loader(){_classCallCheck(this,Loader);loadInfo={};files={textures:{},geometry:{},fonts:{},data:{}};loadCheck=this.checkLoaded;scope=this;}_createClass(Loader,[{key:'load',value:function load(manifest,onLoadCallback,onProgressCallback){progressCallback=onProgressCallback;loadCallback=onLoadCallback;numFiles=manifest.length;numLoaded=0;var scope=this;manifest.forEach(function(fileObj){if(!(Object.prototype.toString.call(fileObj.file)==='[object Array]')){if(fileObj.file.indexOf('.png')>0||fileObj.file.indexOf('.jpg')>0||fileObj.file.indexOf('.jpeg')>0||fileObj.file.indexOf('.gif')>0){scope.loadTexture(fileObj);}else if(fileObj.file.indexOf('.json')>0){if(fileObj.isData){scope.loadDataJSON(fileObj);}else if(fileObj.isFont){scope.loadFontJSON(fileObj);}else{scope.loadGeometryJSON(fileObj);}}else if(fileObj.file.indexOf('.dae')>0){scope.loadCollada(fileObj);}}else{scope.loadCubemap(fileObj);}});interval=setInterval(scope.update,1000/30);}},{key:'loadDataJSON',value:function loadDataJSON(fileObj){var xhr=new XMLHttpRequest();xhr.overrideMimeType(\"application/json\");xhr.open('GET',fileObj.file,true);xhr.onreadystatechange=function(){if(xhr.readyState===4&&xhr.status===200){files.data[fileObj.id]=JSON.parse(xhr.responseText);numLoaded++;loadCheck();}};xhr.send();}},{key:'loadGeometryJSON',value:function loadGeometryJSON(fileObj){// console.log('loadGeometryJSON:', fileObj.file);\nvar loader=new THREE.JSONLoader();loadInfo[fileObj.id]={loaded:0,total:0};loader.load(fileObj.file,function(geometry){loadInfo[fileObj.id].loaded=loadInfo[fileObj.id].total;files.geometry[fileObj.id]=geometry;numLoaded++;loadCheck();},function(xhr){loadInfo[fileObj.id].loaded=xhr.loaded;loadInfo[fileObj.id].total=xhr.total;});}},{key:'loadFontJSON',value:function loadFontJSON(fileObj){var loader=new THREE.FontLoader();loadInfo[fileObj.id]={loaded:0,total:0};loader.load(fileObj.file,function(font){loadInfo[fileObj.id].loaded=loadInfo[fileObj.id].total;files.fonts[fileObj.id]=font;numLoaded++;loadCheck();},function(xhr){loadInfo[fileObj.id].loaded=xhr.loaded;loadInfo[fileObj.id].total=xhr.total;});}},{key:'loadCollada',value:function loadCollada(fileObj){// console.log('loadCollada:', fileObj.file);\nvar loader=new THREE.ColladaLoader();loadInfo[fileObj.id]={loaded:0,total:0};loader.load(fileObj.file,function(collada){loadInfo[fileObj.id].loaded=loadInfo[fileObj.id].total;files.geometry[fileObj.id]=collada;numLoaded++;loadCheck();},function(xhr){loadInfo[fileObj.id].loaded=xhr.loaded;loadInfo[fileObj.id].total=xhr.total;});}},{key:'loadTexture',value:function loadTexture(fileObj){// console.log('loadTexture:', fileObj.id, fileObj.file);\nvar loader=new THREE.TextureLoader();loadInfo[fileObj.id]={loaded:0,total:0};loader.load(fileObj.file,function(texture){loadInfo[fileObj.id].loaded=loadInfo[fileObj.id].total;files.textures[fileObj.id]=texture;numLoaded++;loadCheck();},function(xhr){loadInfo[fileObj.id].loaded=xhr.loaded;loadInfo[fileObj.id].total=xhr.total;});}},{key:'loadCubemap',value:function loadCubemap(fileObj){// console.log('loadCubemap:', fileObj.file);\nvar loader=new THREE.CubeTextureLoader();loadInfo[fileObj.id]={loaded:0,total:0};loader.load(fileObj.file,function(texture){loadInfo[fileObj.id].loaded=loadInfo[fileObj.id].total;files.textures[fileObj.id]=texture;numLoaded++;loadCheck();},function(xhr){loadInfo[fileObj.id].loaded=xhr.loaded;loadInfo[fileObj.id].total=xhr.total;});}},{key:'checkLoaded',value:function checkLoaded(){if(done)return;// console.log('checkLoaded:', numLoaded, numFiles);\nif(numLoaded===numFiles)// || percent === 1)\n{done=true;clearInterval(interval);scope.update();if(typeof loadCallback==='function'){loadCallback(files);}// dispose();\n}}},{key:'update',value:function update(){if(typeof progressCallback==='function'){var loaded=0;var total=0;for(var info in loadInfo){loaded+=parseInt(loadInfo[info].loaded);total+=parseInt(loadInfo[info].total);}// checkLoaded(loaded/total);\nif(progressCallback)progressCallback(loaded,total);}}},{key:'dispose',value:function dispose(){clearInterval(interval);interval=null;loadInfo=null;files=null;numFiles=null;numLoaded=null;progressCallback=null;loadCallback=null;done=null;}}]);return Loader;}();exports.default=Loader;\n\n},{}],6:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.degreesToRads=degreesToRads;exports.radsToDegrees=radsToDegrees;exports.getDataTexture=getDataTexture;exports.createPlane=createPlane;exports.randomRange=randomRange;exports.rotateAroundWorldAxisX=rotateAroundWorldAxisX;exports.rotateAroundWorldAxisY=rotateAroundWorldAxisY;exports.rotateAroundWorldAxisZ=rotateAroundWorldAxisZ;exports.rotateAroundWorldAxis=rotateAroundWorldAxis;exports.setScale=setScale;exports.disposeOfMesh=disposeOfMesh;exports.disposeOfChildren=disposeOfChildren;exports.removeAllChildren=removeAllChildren;exports.moveTowards=moveTowards;exports.moveVectorTowards=moveVectorTowards;exports.rotateTowards=rotateTowards;exports.updateCameraMatrices=updateCameraMatrices;exports.meshIsInView=meshIsInView;exports.getMouseIntersection=getMouseIntersection;exports.objectWorldPositionToScreen=objectWorldPositionToScreen;exports.objectWorldPositionToScreenAlt=objectWorldPositionToScreenAlt;exports.worldToScreen=worldToScreen;exports.screenToWorld=screenToWorld;exports.screenToWorldAtZ=screenToWorldAtZ;exports.getMouseWorldPos=getMouseWorldPos;exports.getMouseWorldPosAtZ=getMouseWorldPosAtZ;exports.getEdges=getEdges;exports.addFragmentFogInjections=addFragmentFogInjections;exports.pointOnSphere=pointOnSphere;exports.getPointsOnSphere=getPointsOnSphere;exports.getPointsWithinSphere=getPointsWithinSphere;exports.getPointsOnSphereEvenly=getPointsOnSphereEvenly;exports.getRandomVector3=getRandomVector3;exports.addRandomVector3=addRandomVector3;exports.rotationInDegrees=rotationInDegrees;exports.loadJSONGeometry=loadJSONGeometry;exports.loadTextures=loadTextures;exports.setTextureWrapping=setTextureWrapping;exports.setTextureMipmapping=setTextureMipmapping;exports.setTextureMinMagFilters=setTextureMinMagFilters;exports.injectShaderCode=injectShaderCode;exports.logVector=logVector;exports.logProgramInfo=logProgramInfo;var axisUp=exports.axisUp=new THREE.Vector3(0,1,0);var axisDown=exports.axisDown=new THREE.Vector3(0,-1,0);var axisLeft=exports.axisLeft=new THREE.Vector3(-1,0,0);var axisRight=exports.axisRight=new THREE.Vector3(1,0,0);var axisForward=exports.axisForward=new THREE.Vector3(0,0,1);var axisBackward=exports.axisBackward=new THREE.Vector3(0,0,-1);function degreesToRads(degrees){return degrees/180*Math.PI;}function radsToDegrees(radians){return radians*180/Math.PI;}function getDataTexture(data,width,height,format){var tex=new THREE.DataTexture(data,width,height,format,THREE.FloatType);tex.minFilter=THREE.NearestFilter;tex.magFilter=THREE.NearestFilter;tex.generateMipmaps=false;tex.needsUpdate=true;return tex;}function createPlane(width,height,color){return new THREE.Mesh(new THREE.PlaneGeometry(width||1,height||1),new THREE.MeshBasicMaterial({color:color||0xffffff}));}//export function createSphere(radius, color)\n// {\n//     // TODO\n// }\n//export function createCube(width, height, depth, color)\n// {\n//     // TODO\n// }\nfunction randomRange(min,max){return min+Math.random()*(max-min);}function rotateAroundWorldAxisX(object,radians){var matrix=new THREE.Matrix4();matrix.makeRotationX(radians);matrix.multiply(object.matrix);object.matrix=matrix;object.rotation.setFromRotationMatrix(object.matrix);}function rotateAroundWorldAxisY(object,radians){var matrix=new THREE.Matrix4();matrix.makeRotationY(radians);matrix.multiply(object.matrix);object.matrix=matrix;object.rotation.setFromRotationMatrix(object.matrix);}function rotateAroundWorldAxisZ(object,radians){var matrix=new THREE.Matrix4();matrix.makeRotationZ(radians);matrix.multiply(object.matrix);object.matrix=matrix;object.rotation.setFromRotationMatrix(object.matrix);}function rotateAroundWorldAxis(object,axis,radians){var rotWorldMatrix=new THREE.Matrix4();rotWorldMatrix.makeRotationAxis(axis.normalize(),radians);rotWorldMatrix.multiply(object.matrix);object.matrix=rotWorldMatrix;object.rotation.setFromRotationMatrix(object.matrix);}function setScale(object,scale){object.scale.set(scale,scale,scale);}function disposeOfMesh(mesh){if(!mesh)return;if(mesh.parent)mesh.parent.remove(mesh);if(mesh.geometry)mesh.geometry.dispose();if(mesh.material){if(mesh.material.map){mesh.material.map.dispose();}mesh.material.dispose();}}function disposeOfChildren(children){// console.log('disposeOfChildren:', children.length);\nif(!children)return;while(children.length>0){disposeOfMesh(children[0]);}}function removeAllChildren(object3d){while(object3d.children.length>0){object3d.remove(object3d.children[0]);}}function moveTowards(object,position,easing){object.position.x+=(position.x-object.position.x)*easing;object.position.y+=(position.y-object.position.y)*easing;object.position.z+=(position.z-object.position.z)*easing;}function moveVectorTowards(v1,v2,easing){v1.x+=(v2.x-v1.x)*easing;v1.y+=(v2.y-v1.y)*easing;v1.z+=(v2.z-v1.z)*easing;}function rotateTowards(object,rotation,easing){object.rotation.x+=(rotation.x-object.rotation.x)*easing;object.rotation.y+=(rotation.y-object.rotation.y)*easing;object.rotation.z+=(rotation.z-object.rotation.z)*easing;}function updateCameraMatrices(camera){camera.updateMatrix();camera.updateMatrixWorld();camera.matrixWorldInverse.getInverse(camera.matrixWorld);}function meshIsInView(mesh,camera,frustum){frustum=frustum||new THREE.Frustum();updateCameraMatrices(camera);mesh.updateMatrix();mesh.updateMatrixWorld();frustum.setFromMatrix(new THREE.Matrix4().multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse));return frustum.intersectsObject(mesh);}function getMouseIntersection(mouse,camera,objects,raycaster){raycaster=raycaster||new THREE.Raycaster();raycaster.setFromCamera(mouse,camera);var intersections=raycaster.intersectObjects(objects);return intersections.length>0?intersections[0]:null;}function objectWorldPositionToScreen(object,camera){updateCameraMatrices(camera);object.updateMatrixWorld();var width=window.innerWidth,height=window.innerHeight,widthHalf=width/2,heightHalf=height/2,vector=new THREE.Vector3().setFromMatrixPosition(object.matrixWorld);vector.project(camera);return{x:vector.x*widthHalf+widthHalf|0,y:-(vector.y*heightHalf)+heightHalf|0};}function objectWorldPositionToScreenAlt(object,camera){updateCameraMatrices(camera);object.updateMatrixWorld();var width=window.innerWidth,height=window.innerHeight,pos=new THREE.Vector3().setFromMatrixPosition(object.matrixWorld),projScreenMat=new THREE.Matrix4();projScreenMat.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);pos.applyMatrix4(projScreenMat);// pos.applyProjection(projScreenMat);\nreturn{x:(pos.x+1)*width/2|0,y:(-pos.y+1)*height/2|0};}function worldToScreen(position,camera){updateCameraMatrices(camera);var width=window.innerWidth,height=window.innerHeight,widthHalf=width/2,heightHalf=height/2,vector=new THREE.Vector3().copy(position);vector.project(camera);return{x:vector.x*widthHalf+widthHalf|0,y:-(vector.y*heightHalf)+heightHalf|0};// vector.x = ( vector.x * widthHalf ) + widthHalf;\n// vector.y = - ( vector.y * heightHalf ) + heightHalf;\n// return vector;\n}function screenToWorld(position,camera){updateCameraMatrices(camera);var x=position.x/window.innerWidth*2-1,y=-(position.y/window.innerHeight)*2+1,vector=new THREE.Vector3(x,y,0.5);vector.unproject(camera);var dir=vector.sub(camera.position).normalize(),distance=-camera.position.z/dir.z;return camera.position.clone().add(dir.multiplyScalar(distance));}function screenToWorldAtZ(position,z,camera){// let x = ( position.x / window.innerWidth ) * 2 - 1,\n//     y = - ( position.y / window.innerHeight ) * 2 + 1,\n//     planeZ = new THREE.Plane(new THREE.Vector3(0, 0, 1), z),\n//     vector = new THREE.Vector3(x, y, 0.5),\n//     projector = new THREE.Projector(),\n//     raycaster = projector.pickingRay(vector, camera);\n// return raycaster.ray.intersectPlane(planeZ);\nvar x=position.x/window.innerWidth*2-1,y=-(position.y/window.innerHeight)*2+1,planeZ=new THREE.Plane(new THREE.Vector3(0,0,1),z),vector=new THREE.Vector3(x,y,0.5),raycaster=new THREE.Raycaster(),pos=void 0;// raycaster.pickingRay(vector, camera);\nraycaster.setFromCamera(vector,camera);pos=raycaster.ray.intersectPlane(planeZ);return pos;}function getMouseWorldPos(mouseScreenPos,camera){// let vec = new THREE.Vector3(mouseScreenPos.x, mouseScreenPos.y, 0.5).unproject(camera);\nvar vec=mouseScreenPos.clone().unproject(camera);var dir=vec.sub(camera.position).normalize();var distance=-camera.position.z/dir.z;return camera.position.clone().add(dir.multiplyScalar(distance));}function getMouseWorldPosAtZ(mouseScreenPos,camera,z){var planeZ=new THREE.Plane(new THREE.Vector3(0,0,1),z);// let vec = new THREE.Vector3(mouseScreenPos.x, mouseScreenPos.y, 0.5);\nvar vec=mouseScreenPos;var raycaster=new THREE.Raycaster();raycaster.pickingRay(vec,camera);var pos=raycaster.ray.intersectPlane(planeZ);return pos;}function getEdges(mesh){var edge=[0,0],hash={};keys=['a','b','c'],geometry2,thresholdDot=Math.cos(THREE.Math.degToRad(1));var sortFunction=function sortFunction(a,b){return a-b;};if(mesh.geometry instanceof THREE.BufferGeometry){geometry2=new THREE.Geometry();geometry2.fromBufferGeometry(mesh.geometry);}else{geometry2=mesh.geometry.clone();}geometry2.mergeVertices();geometry2.computeFaceNormals();var vertices=geometry2.vertices,faces=geometry2.faces,facesOriginal=mesh.geometry.faces,key=void 0;for(var _i=0,l=faces.length;_i<l;_i++){var face=faces[_i];for(var j=0;j<3;j++){edge[0]=face[keys[j]];edge[1]=face[keys[(j+1)%3]];edge.sort(sortFunction);key=edge.toString();if(hash[key]===undefined){hash[key]={vert1:edge[0],vert2:edge[1],face1:_i,face2:undefined};}else{hash[key].face2=_i;}}}var edges=[];for(key in hash){var h=hash[key];if(h.face2===undefined||faces[h.face1].normal.dot(faces[h.face2].normal)<=thresholdDot){edges.push({vertex1:vertices[h.vert1],vertex2:vertices[h.vert2],// face1:faces[ h.face1 ],\n// face2:faces[ h.face2 ],\nface1:facesOriginal[h.face1],face2:facesOriginal[h.face2],faceIndex1:h.face1,faceIndex2:h.face2});}}return edges;}function addFragmentFogInjections(fragmentShader){var lines=fragmentShader.split('\\n'),len=lines.length;for(var _i2=0;_i2<len;_i2++){if(lines[_i2]==='/*#FOG_INJECTION_1#*/'){lines[_i2]=THREE.ShaderChunk['fog_pars_fragment'];}else if(lines[_i2]==='/*#FOG_INJECTION_2#*/'){lines[_i2]=THREE.ShaderChunk['fog_fragment'];}}return lines.join('\\n');}function pointOnSphere(r,a1,a2){return{x:r*Math.cos(a1)*Math.sin(a2),y:r*Math.sin(a1)*Math.sin(a2),z:r*Math.cos(a2)};}function getPointsOnSphere(n){var pts=[],pt=void 0;for(var _i3=0;_i3<n;_i3++){pt=pointOnSphere(1,Math.random()*Math.PI*2,Math.random()*Math.PI*2);pts.push(new THREE.Vector3(pt.x,pt.y,pt.z));}return pts;}function getPointsWithinSphere(n,maxRadius){var pts=[],pt=void 0;for(var _i4=0;_i4<n;_i4++){pt=pointOnSphere(Math.random()*maxRadius,Math.random()*Math.PI*2,Math.random()*Math.PI*2);pts.push(new THREE.Vector3(pt.x,pt.y,pt.z));}return pts;}function getPointsOnSphereEvenly(n){var pts=[],inc=Math.PI*(3-Math.sqrt(5)),off=2.0/n,x=void 0,y=void 0,z=void 0,r=void 0,phi=void 0;for(var k=0;k<n;k++){y=k*off-1+off/2;r=Math.sqrt(1-y*y);phi=k*inc;x=Math.cos(phi)*r;z=Math.sin(phi)*r;pts.push(new THREE.Vector3(x,y,z));}return pts;}function getRandomVector3(min,max){return new THREE.Vector3(randomRange(min,max),randomRange(min,max),randomRange(min,max));}function addRandomVector3(vec,min,max){return getRandomVector3(min,max).add(vec);}function rotationInDegrees(rotation){var degrees=180/Math.PI;return new THREE.Euler(rotation.x*degrees,rotation.y*degrees,rotation.z*degrees,rotation.order);}function loadJSONGeometry(manifest,callback){var loader=new THREE.JSONLoader(),len=manifest.length,loaded=0,file=void 0,id=void 0,geometriesById={};geometries=[];var load=function load(){file=manifest[loaded].file!==undefined?manifest[loaded].file:manifest[loaded];id=manifest[loaded].id!==undefined?manifest[loaded].id:null;loader.load(file,function(g){if(id){geometriesById[id]=g;}geometries.push({geometry:g,id:id});loaded++;if(loaded===len){if(typeof callback==='function'){callback(geometries,geometriesById);}}else{load();}});};load();}function loadTextures(manifest,callback){var len=manifest.length,loaded=0,file=void 0,id=void 0,texturesById={};textures=[],loader=new THREE.TextureLoader();loader.crossOrigin=\"\";var load=function load(){file=manifest[loaded].file!==undefined?manifest[loaded].file:manifest[loaded];id=manifest[loaded].id!==undefined?manifest[loaded].id:null;loader.load(file,function(tex){if(id){texturesById[id]=tex;}textures.push({texture:tex,id:id});loaded++;if(loaded===len){if(typeof callback==='function'){callback(textures,texturesById);}}else{load();}});// THREE.ImageUtils.loadTexture(file, undefined, function(tex){\n//     if(id)\n//     {\n//         texturesById[id] = tex;\n//     }\n//     textures.push({texture:tex, id:id});\n//     loaded++;\n//     if(loaded === len)\n//     {\n//         if(typeof callback === 'function')\n//         {\n//             callback(textures, texturesById);\n//         }\n//     }\n//     else\n//     {\n//         load();\n//     }\n// });\n};load();}function setTextureWrapping(textures,wrapping){for(var _i5=0;_i5<textures.length;_i5++){textures[_i5].wrapS=textures[_i5].wrapT=wrapping;textures[_i5].needsUpdate=true;}}function setTextureMipmapping(textures,mipmapping){for(var _i6=0;_i6<textures.length;_i6++){textures[_i6].generateMipmaps=mipmapping;textures[_i6].needsUpdate=true;}}function setTextureMinMagFilters(textures,minFilter,magFilter){for(var _i7=0;_i7<textures.length;_i7++){if(minFilter)textures[_i7].minFilter=minFilter;if(magFilter)textures[_i7].magFilter=magFilter;textures[_i7].needsUpdate=true;}}function injectShaderCode(original,key,injection){if(Object.prototype.toString.call(injection)==='[object Array]'){var replacement='';for(var _i8=0;_i8<injection.length;_i8++){replacement+=injection[_i8]+'\\n';}return original.replace(key,replacement);}else{return original.replace(key,injection);}}function logVector(vector){console.log(vector.x,vector.y,vector.z);}// usage: pass renderer.getContext() & mesh.material.program.program, call render at least once first.\nfunction logProgramInfo(gl,program){var result={attributes:[],uniforms:[],attributeCount:0,uniformCount:0};activeUniforms=gl.getProgramParameter(program,gl.ACTIVE_UNIFORMS),activeAttributes=gl.getProgramParameter(program,gl.ACTIVE_ATTRIBUTES);// Taken from the WebGl spec:\n// http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14\nvar enums={0x8B50:'FLOAT_VEC2',0x8B51:'FLOAT_VEC3',0x8B52:'FLOAT_VEC4',0x8B53:'INT_VEC2',0x8B54:'INT_VEC3',0x8B55:'INT_VEC4',0x8B56:'BOOL',0x8B57:'BOOL_VEC2',0x8B58:'BOOL_VEC3',0x8B59:'BOOL_VEC4',0x8B5A:'FLOAT_MAT2',0x8B5B:'FLOAT_MAT3',0x8B5C:'FLOAT_MAT4',0x8B5E:'SAMPLER_2D',0x8B60:'SAMPLER_CUBE',0x1400:'BYTE',0x1401:'UNSIGNED_BYTE',0x1402:'SHORT',0x1403:'UNSIGNED_SHORT',0x1404:'INT',0x1405:'UNSIGNED_INT',0x1406:'FLOAT'};// Loop through active uniforms\nfor(var _i9=0;_i9<activeUniforms;_i9++){var uniform=gl.getActiveUniform(program,_i9);uniform.typeName=enums[uniform.type];result.uniforms.push(uniform);result.uniformCount+=uniform.size;}// Loop through active attributes\nfor(i=0;i<activeAttributes;i++){var attribute=gl.getActiveAttrib(program,i);attribute.typeName=enums[attribute.type];result.attributes.push(attribute);result.attributeCount+=attribute.size;}console.log(result);}\n\n},{}],7:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.createElement=createElement;exports.normalize=normalize;exports.lerp=lerp;exports.map=map;exports.clamp=clamp;exports.distance=distance;exports.distanceXY=distanceXY;exports.circleCollision=circleCollision;exports.circlePointCollision=circlePointCollision;exports.pointInRect=pointInRect;exports.inRange=inRange;exports.rangeIntersect=rangeIntersect;exports.rectIntersect=rectIntersect;exports.degreesToRads=degreesToRads;exports.radsToDegrees=radsToDegrees;exports.angleBetweenPoints=angleBetweenPoints;exports.randomRange=randomRange;exports.randomInt=randomInt;exports.roundToPlaces=roundToPlaces;exports.roundNearest=roundNearest;exports.quadraticBezier=quadraticBezier;exports.cubicBezier=cubicBezier;exports.multicurve=multicurve;exports.pointOnSphere=pointOnSphere;exports.getPointsOnSphere=getPointsOnSphere;exports.getPointsOnSphereEvenly=getPointsOnSphereEvenly;exports.clone=clone;exports.isArray=isArray;exports.shuffleArray=shuffleArray;exports.thinOutArray=thinOutArray;exports.randomItemFromArray=randomItemFromArray;exports.arrayRestrictedToRangeZ=arrayRestrictedToRangeZ;exports.extractKeyFromArray=extractKeyFromArray;exports.repeat=repeat;exports.isOpera=isOpera;exports.isFirefox=isFirefox;exports.isSafari=isSafari;exports.isChrome=isChrome;exports.isIE=isIE;exports.isMac=isMac;exports.isWindows=isWindows;exports.hasWebGL=hasWebGL;exports.getVideoType=getVideoType;exports.dispatchEvent=dispatchEvent;exports.setCursor=setCursor;exports.getParameterByName=getParameterByName;function createElement(type,classNames,content){type=type||'div';var el=document.createElement(type);if(classNames){classNames.forEach(function(name){el.classList.add(name);});}if(content)el.innerHTML=content;return el;}function normalize(value,min,max){return(value-min)/(max-min);}function lerp(norm,min,max){return(max-min)*norm+min;}function map(value,sourceMin,sourceMax,destMin,destMax){return lerp(normalize(value,sourceMin,sourceMax),destMin,destMax);}function clamp(value,min,max){return Math.min(Math.max(value,Math.min(min,max)),Math.max(min,max));}function distance(p0,p1){var dx=p1.x-p0.x,dy=p1.y-p0.y;return Math.sqrt(dx*dx+dy*dy);}function distanceXY(x0,y0,x1,y1){var dx=x1-x0,dy=y1-y0;return Math.sqrt(dx*dx+dy*dy);}function circleCollision(c0,c1){return distance(c0,c1)<=c0.radius+c1.radius;}function circlePointCollision(x,y,circle){return distanceXY(x,y,circle.x,circle.y)<circle.radius;}function pointInRect(x,y,rect){return inRange(x,rect.x,rect.x+rect.width)&&inRange(y,rect.y,rect.y+rect.height);}function inRange(value,min,max){return value>=Math.min(min,max)&&value<=Math.max(min,max);}function rangeIntersect(min0,max0,min1,max1){return Math.max(min0,max0)>=Math.min(min1,max1)&&Math.min(min0,max0)<=Math.max(min1,max1);}function rectIntersect(r0,r1){return rangeIntersect(r0.x,r0.x+r0.width,r1.x,r1.x+r1.width)&&rangeIntersect(r0.y,r0.y+r0.height,r1.y,r1.y+r1.height);}function degreesToRads(degrees){return degrees/180*Math.PI;}function radsToDegrees(radians){return radians*180/Math.PI;}function angleBetweenPoints(p1,p2){return Math.atan2(p2.y-p1.y,p2.x-p1.x);}function randomRange(min,max){return min+Math.random()*(max-min);}function randomInt(min,max){return Math.floor(min+Math.random()*(max-min+1));}function roundToPlaces(value,places){var mult=Math.pow(10,places);return Math.round(value*mult)/mult;}function roundNearest(value,nearest){return Math.round(value/nearest)*nearest;}function quadraticBezier(p0,p1,p2,t,pFinal){pFinal=pFinal||{};pFinal.x=Math.pow(1-t,2)*p0.x+(1-t)*2*t*p1.x+t*t*p2.x;pFinal.y=Math.pow(1-t,2)*p0.y+(1-t)*2*t*p1.y+t*t*p2.y;return pFinal;}function cubicBezier(p0,p1,p2,p3,t,pFinal){pFinal=pFinal||{};pFinal.x=Math.pow(1-t,3)*p0.x+Math.pow(1-t,2)*3*t*p1.x+(1-t)*3*t*t*p2.x+t*t*t*p3.x;pFinal.y=Math.pow(1-t,3)*p0.y+Math.pow(1-t,2)*3*t*p1.y+(1-t)*3*t*t*p2.y+t*t*t*p3.y;return pFinal;}function multicurve(points,context){var p0=void 0,p1=void 0,midx=void 0,midy=void 0;context.moveTo(points[0].x,points[0].y);for(var i=1;i<points.length-2;i+=1){p0=points[i];p1=points[i+1];midx=(p0.x+p1.x)/2;midy=(p0.y+p1.y)/2;context.quadraticCurveTo(p0.x,p0.y,midx,midy);}p0=points[points.length-2];p1=points[points.length-1];context.quadraticCurveTo(p0.x,p0.y,p1.x,p1.y);}function pointOnSphere(r,a1,a2){return{x:r*Math.cos(a1)*Math.sin(a2),y:r*Math.sin(a1)*Math.sin(a2),z:r*Math.cos(a2)};}function getPointsOnSphere(n){var pts=[],pt=void 0;for(var i=0;i<n;i++){pt=pointOnSphere(1,Math.random()*Math.PI*2,Math.random()*Math.PI*2);pts.push({x:pt.x,y:pt.y,z:pt.z});}return pts;}function getPointsOnSphereEvenly(n){var pts=[],inc=Math.PI*(3-Math.sqrt(5)),off=2.0/n,x=void 0,y=void 0,z=void 0,r=void 0,phi=void 0;for(var k=0;k<n;k++){y=k*off-1+off/2;r=Math.sqrt(1-y*y);phi=k*inc;x=Math.cos(phi)*r;z=Math.sin(phi)*r;pts.push({x:x,y:y,z:z});}return pts;}function clone(obj){return JSON.parse(JSON.stringify(obj));}function isArray(arg){return Object.prototype.toString.call(arg)==='[object Array]';}function shuffleArray(array){var currentIndex=array.length,temporaryValue=void 0,randomIndex=void 0;while(0!==currentIndex){randomIndex=Math.floor(Math.random()*currentIndex);currentIndex-=1;temporaryValue=array[currentIndex];array[currentIndex]=array[randomIndex];array[randomIndex]=temporaryValue;}return array;}function thinOutArray(array,n){var newArray=[],len=array.length;for(var i=0;i<len;i+=n){newArray.push(array[i]);}return newArray;}function randomItemFromArray(array){return array[Math.random()*array.length|0];}function arrayRestrictedToRangeZ(array,minZ,maxZ){var newArray=[],len=array.length;for(var i=0;i<len;i++){if(inRange(array[i].z,minZ,maxZ))newArray.push(array[i]);}return newArray;}function extractKeyFromArray(array,key){var a=[];for(var i=0;i<array.length;i++){a.push(array[i][key]);}return a;}function repeat(callback,params,intervals,delay,startDelay){startDelay=startDelay||0;var i=0;var doStuff=function doStuff(){setTimeout(function(){callback(params);i++;if(i<intervals)doStuff();},delay);};setTimeout(function(){doStuff();},startDelay);}function isOpera(){// Opera 8.0+ (UA detection to detect Blink/v8-powered Opera)\nreturn!!window.opera||navigator.userAgent.indexOf(' OPR/')>=0;}function isFirefox(){// Firefox 1.0+\nreturn typeof InstallTrigger!=='undefined';}function isSafari(){// At least Safari 3+: '[object HTMLElementConstructor]'\nreturn Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor')>0;}function isChrome(){// Chrome 1+\nreturn!!window.chrome&&!isOpera();}function isIE(){// At least IE6\nreturn false||!!document.documentMode;}function isMac(){return navigator.platform.toLowerCase().indexOf('mac')>-1;}function isWindows(){return navigator.platform.toLowerCase().indexOf('win')>-1;}function hasWebGL(){if(!!window.WebGLRenderingContext){var canvas=document.createElement('canvas'),names=['webgl','experimental-webgl','moz-webgl','webkit-3d'],context=false;for(var i=0;i<4;i++){try{context=canvas.getContext(names[i]);if(context&&typeof context.getParameter==='function'){// WebGL is enabled\nreturn true;}}catch(e){}}// WebGL is supported, but disabled\nreturn false;}// WebGL not supported\nreturn false;}function getVideoType(file){if(file.indexOf('.mp4')!==-1)return'video/mp4';else if(file.indexOf('.webm')!==-1)return'video/webm';else if(file.indexOf('.ogg')!==-1)return'video/ogg';}function dispatchEvent(eventName,config){config=config||null;var event=void 0;if(!isIE()){event=new CustomEvent(eventName,{detail:config});document.dispatchEvent(event);}else{event=document.createEvent('CustomEvent');event.initCustomEvent(eventName,true,false,config);document.dispatchEvent(event);}}function setCursor(cursor,element){element=element||document.body;if(element.style.cursor!==cursor){element.style.cursor=cursor;}}function getParameterByName(name){name=name.replace(/[\\[]/,\"\\\\[\").replace(/[\\]]/,\"\\\\]\");var regex=new RegExp(\"[\\\\?&]\"+name+\"=([^&#]*)\"),results=regex.exec(location.search);return results===null?\"\":decodeURIComponent(results[1].replace(/\\+/g,\" \"));}\n\n},{}]},{},[4])\n\n","'use strict';\n\nlet scene,\n    camera,\n    mesh,\n    rtt1,\n    rtt2,\n    flip = false;\n\nexport default class GPGPU\n{\n    constructor({renderer, simulationMaterial, renderMaterial, size = 128, format = THREE.RGBFormat})\n    {\n        const gl = renderer.getContext();\n\n        if(!gl.getExtension('OES_texture_float'))\n        {\n            alert('No OES_texture_float support for float textures!');\n            return;\n        }\n\n        if(gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS) === 0)\n        {\n            alert('No support for vertex shader textures!');\n            return;\n        }\n\n        camera = new THREE.OrthographicCamera(-0.5, 0.5, 0.5, -0.5, 0, 1);\n\n        scene = new THREE.Scene();\n\n        mesh = new THREE.Mesh(new THREE.PlaneBufferGeometry(1, 1), simulationMaterial);\n        scene.add(mesh);\n\n        const options = {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            type: THREE.FloatType,\n            format: format,\n            // depth: false,\n            stencil: false\n        };\n        rtt1 = new THREE.WebGLRenderTarget(size, size, options);\n        rtt2 = rtt1.clone();\n\n        this.renderer = renderer;\n        this.simulationMaterial = simulationMaterial;\n        this.renderMaterial = renderMaterial;\n    }\n\n    update(propertyName)\n    {\n        propertyName = propertyName || 'tPositions';\n\n        if(flip)\n        {\n            this.renderer.render(scene, camera, rtt2, false);\n            this.renderMaterial.uniforms[propertyName].value = rtt2.texture;\n            this.simulationMaterial.uniforms[propertyName].value = rtt2.texture;\n        }\n        else\n        {\n            this.renderer.render(scene, camera, rtt1, false);\n            this.renderMaterial.uniforms[propertyName].value = rtt1.texture;\n            this.simulationMaterial.uniforms[propertyName].value = rtt1.texture;\n        }\n\n        flip = !flip;\n    }\n}","// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function(){function f(a,e,b){a=document.createElement(a);a.id=e;a.style.cssText=b;return a}function l(a,e,b){var c=f(\"div\",a,\"padding:0 0 3px 3px;text-align:left;background:\"+b),d=f(\"div\",a+\"Text\",\"font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px;color:\"+e);d.innerHTML=a.toUpperCase();c.appendChild(d);a=f(\"div\",a+\"Graph\",\"width:74px;height:30px;background:\"+e);c.appendChild(a);for(e=0;74>e;e++)a.appendChild(f(\"span\",\"\",\"width:1px;height:30px;float:left;opacity:0.9;background:\"+\nb));return c}function m(a){for(var b=c.children,d=0;d<b.length;d++)b[d].style.display=d===a?\"block\":\"none\";n=a}function p(a,b){a.appendChild(a.firstChild).style.height=Math.min(30,30-30*b)+\"px\"}var q=self.performance&&self.performance.now?self.performance.now.bind(performance):Date.now,k=q(),r=k,t=0,n=0,c=f(\"div\",\"stats\",\"width:80px;opacity:0.9;cursor:pointer\");c.addEventListener(\"mousedown\",function(a){a.preventDefault();m(++n%c.children.length)},!1);var d=0,u=Infinity,v=0,b=l(\"fps\",\"#0ff\",\"#002\"),\nA=b.children[0],B=b.children[1];c.appendChild(b);var g=0,w=Infinity,x=0,b=l(\"ms\",\"#0f0\",\"#020\"),C=b.children[0],D=b.children[1];c.appendChild(b);if(self.performance&&self.performance.memory){var h=0,y=Infinity,z=0,b=l(\"mb\",\"#f08\",\"#201\"),E=b.children[0],F=b.children[1];c.appendChild(b)}m(n);return{REVISION:14,domElement:c,setMode:m,begin:function(){k=q()},end:function(){var a=q();g=a-k;w=Math.min(w,g);x=Math.max(x,g);C.textContent=(g|0)+\" MS (\"+(w|0)+\"-\"+(x|0)+\")\";p(D,g/200);t++;if(a>r+1E3&&(d=Math.round(1E3*\nt/(a-r)),u=Math.min(u,d),v=Math.max(v,d),A.textContent=d+\" FPS (\"+u+\"-\"+v+\")\",p(B,d/100),r=a,t=0,void 0!==h)){var b=performance.memory.usedJSHeapSize,c=performance.memory.jsHeapSizeLimit;h=Math.round(9.54E-7*b);y=Math.min(y,h);z=Math.max(z,h);E.textContent=h+\" MB (\"+y+\"-\"+z+\")\";p(F,b/c)}return a},update:function(){k=this.end()}}};\"object\"===typeof module&&(module.exports=Stats);\n","'use strict';\n\nimport App from './app/app';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const app = new App();\n}, false);","'use strict';\n\nlet interval,\n    loadInfo,\n    files,\n    numFiles,\n    numLoaded,\n    progressCallback,\n    loadCallback,\n    loadCheck,\n    scope,\n    done = false;\n\nexport default class Loader\n{\n    constructor()\n    {\n        loadInfo = {};\n        files = {textures:{}, geometry:{}, fonts:{}, data:{}};\n        loadCheck = this.checkLoaded;\n        scope = this;\n    }\n\n    load(manifest, onLoadCallback, onProgressCallback)\n    {\n        progressCallback = onProgressCallback;\n        loadCallback = onLoadCallback;\n\n        numFiles = manifest.length;\n        numLoaded = 0;\n\n        const scope = this;\n\n        manifest.forEach(function(fileObj){\n            if(!(Object.prototype.toString.call(fileObj.file) === '[object Array]'))\n            {\n                if(fileObj.file.indexOf('.png') > 0 || fileObj.file.indexOf('.jpg') > 0 || fileObj.file.indexOf('.jpeg') > 0 || fileObj.file.indexOf('.gif') > 0)\n                {\n                    scope.loadTexture(fileObj);\n                }\n                else if(fileObj.file.indexOf('.json') > 0)\n                {\n                    if(fileObj.isData)\n                    {\n                        scope.loadDataJSON(fileObj);\n                    }\n                    else if(fileObj.isFont)\n                    {\n                        scope.loadFontJSON(fileObj);\n                    }\n                    else\n                    {\n                        scope.loadGeometryJSON(fileObj);\n                    }\n                }\n                else if(fileObj.file.indexOf('.dae') > 0)\n                {\n                    scope.loadCollada(fileObj);\n                }\n            }\n            else\n            {\n                scope.loadCubemap(fileObj)\n            }\n        });\n\n        interval = setInterval(scope.update, 1000/30);\n    }\n\n    loadDataJSON(fileObj)\n    {\n        const xhr = new XMLHttpRequest();\n        xhr.overrideMimeType(\"application/json\");\n        xhr.open('GET', fileObj.file, true);\n        xhr.onreadystatechange = function() {\n            if(xhr.readyState === 4 && xhr.status === 200)\n            {\n                files.data[fileObj.id] = JSON.parse(xhr.responseText);\n                numLoaded++;\n                loadCheck();\n            }\n        };\n        xhr.send();\n    }\n\n    loadGeometryJSON(fileObj)\n    {\n        // console.log('loadGeometryJSON:', fileObj.file);\n\n        const loader = new THREE.JSONLoader();\n        loadInfo[fileObj.id] = {loaded:0, total:0}\n\n        loader.load(fileObj.file, function(geometry){\n            loadInfo[fileObj.id].loaded = loadInfo[fileObj.id].total;\n            files.geometry[fileObj.id] = geometry;\n            numLoaded++;\n            loadCheck();\n        }, function(xhr){\n            loadInfo[fileObj.id].loaded = xhr.loaded;\n            loadInfo[fileObj.id].total = xhr.total;\n        });\n    }\n\n    loadFontJSON(fileObj)\n    {\n        const loader = new THREE.FontLoader();\n        loadInfo[fileObj.id] = {loaded:0, total:0}\n\n        loader.load(fileObj.file, function(font){\n            loadInfo[fileObj.id].loaded = loadInfo[fileObj.id].total;\n            files.fonts[fileObj.id] = font;\n            numLoaded++;\n            loadCheck();\n        }, function(xhr){\n            loadInfo[fileObj.id].loaded = xhr.loaded;\n            loadInfo[fileObj.id].total = xhr.total;\n        });\n    }\n\n    loadCollada(fileObj)\n    {\n        // console.log('loadCollada:', fileObj.file);\n\n        const loader = new THREE.ColladaLoader();\n        loadInfo[fileObj.id] = {loaded:0, total:0}\n\n        loader.load(fileObj.file, function(collada){\n            loadInfo[fileObj.id].loaded = loadInfo[fileObj.id].total;\n            files.geometry[fileObj.id] = collada;\n            numLoaded++;\n            loadCheck();\n        }, function(xhr){\n            loadInfo[fileObj.id].loaded = xhr.loaded;\n            loadInfo[fileObj.id].total = xhr.total;\n        });\n    }\n\n    loadTexture(fileObj)\n    {\n        // console.log('loadTexture:', fileObj.id, fileObj.file);\n\n        const loader = new THREE.TextureLoader();\n        loadInfo[fileObj.id] = {loaded:0, total:0}\n\n        loader.load(fileObj.file, function(texture){\n            loadInfo[fileObj.id].loaded = loadInfo[fileObj.id].total;\n            files.textures[fileObj.id] = texture;\n            numLoaded++;\n            loadCheck();\n        }, function(xhr){\n            loadInfo[fileObj.id].loaded = xhr.loaded;\n            loadInfo[fileObj.id].total = xhr.total;\n        });\n    }\n\n    loadCubemap(fileObj)\n    {\n        // console.log('loadCubemap:', fileObj.file);\n\n        const loader = new THREE.CubeTextureLoader();\n        loadInfo[fileObj.id] = {loaded:0, total:0}\n\n        loader.load(fileObj.file, function(texture){\n            loadInfo[fileObj.id].loaded = loadInfo[fileObj.id].total;\n            files.textures[fileObj.id] = texture;\n            numLoaded++;\n            loadCheck();\n        }, function(xhr){\n            loadInfo[fileObj.id].loaded = xhr.loaded;\n            loadInfo[fileObj.id].total = xhr.total;\n        });\n    }\n\n    checkLoaded()\n    {\n        if(done) return;\n\n        // console.log('checkLoaded:', numLoaded, numFiles);\n        if(numLoaded === numFiles)// || percent === 1)\n        {\n            done = true;\n            clearInterval(interval);\n            scope.update();\n\n            if(typeof loadCallback === 'function')\n            {\n                loadCallback(files);\n            }\n\n            // dispose();\n        }\n    }\n\n    update()\n    {\n        if(typeof progressCallback === 'function')\n        {\n            let loaded = 0;\n            let total = 0;\n\n            for(let info in loadInfo)\n            {\n                loaded += parseInt(loadInfo[info].loaded);\n                total += parseInt(loadInfo[info].total);\n            }\n\n            // checkLoaded(loaded/total);\n\n            if(progressCallback) progressCallback(loaded, total);\n        }\n    }\n\n    dispose()\n    {\n        clearInterval(interval);\n\n        interval = null;\n        loadInfo = null;\n        files = null;\n        numFiles = null;\n        numLoaded = null;\n        progressCallback = null;\n        loadCallback = null;\n        done = null;\n    }\n}\n","'use strict';\n\nexport const axisUp = new THREE.Vector3(0, 1, 0);\nexport const axisDown = new THREE.Vector3(0, -1, 0);\nexport const axisLeft = new THREE.Vector3(-1, 0, 0);\nexport const axisRight = new THREE.Vector3(1, 0, 0);\nexport const axisForward = new THREE.Vector3(0, 0, 1);\nexport const axisBackward = new THREE.Vector3(0, 0, -1);\n\nexport function degreesToRads(degrees)\n{\n    return degrees / 180 * Math.PI;\n}\n\nexport function radsToDegrees(radians)\n{\n    return radians * 180 / Math.PI;\n}\n\nexport function getDataTexture(data, width, height, format)\n{\n    let tex = new THREE.DataTexture(data, width, height, format, THREE.FloatType);\n    tex.minFilter = THREE.NearestFilter;\n    tex.magFilter = THREE.NearestFilter;\n    tex.generateMipmaps = false;\n    tex.needsUpdate = true;\n    return tex;\n}\n\nexport function createPlane(width, height, color)\n{\n    return new THREE.Mesh(\n        new THREE.PlaneGeometry(width || 1, height || 1),\n        new THREE.MeshBasicMaterial({color:color || 0xffffff})\n    );\n}\n\n//export function createSphere(radius, color)\n// {\n//     // TODO\n// }\n\n//export function createCube(width, height, depth, color)\n// {\n//     // TODO\n// }\n\nexport function randomRange(min, max)\n{\n    return min + Math.random() * (max - min);\n}\n\nexport function rotateAroundWorldAxisX(object, radians)\n{\n    let matrix = new THREE.Matrix4();\n    matrix.makeRotationX(radians);\n    matrix.multiply(object.matrix);\n    object.matrix = matrix;\n    object.rotation.setFromRotationMatrix(object.matrix);\n}\n\nexport function rotateAroundWorldAxisY(object, radians)\n{\n    let matrix = new THREE.Matrix4();\n    matrix.makeRotationY(radians);\n    matrix.multiply(object.matrix);\n    object.matrix = matrix;\n    object.rotation.setFromRotationMatrix(object.matrix);\n}\n\nexport function rotateAroundWorldAxisZ(object, radians)\n{\n    let matrix = new THREE.Matrix4();\n    matrix.makeRotationZ(radians);\n    matrix.multiply(object.matrix);\n    object.matrix = matrix;\n    object.rotation.setFromRotationMatrix(object.matrix);\n}\n\nexport function rotateAroundWorldAxis(object, axis, radians)\n{\n    let rotWorldMatrix = new THREE.Matrix4();\n    rotWorldMatrix.makeRotationAxis(axis.normalize(), radians);\n    rotWorldMatrix.multiply(object.matrix);\n    object.matrix = rotWorldMatrix;\n    object.rotation.setFromRotationMatrix(object.matrix);\n}\n\nexport function setScale(object, scale)\n{\n    object.scale.set(scale, scale, scale);\n}\n\nexport function disposeOfMesh(mesh)\n{\n    if(!mesh) return;\n\n    if(mesh.parent) mesh.parent.remove(mesh);\n    if(mesh.geometry) mesh.geometry.dispose();\n    if(mesh.material)\n    {\n        if(mesh.material.map)\n        {\n            mesh.material.map.dispose();\n        }\n        mesh.material.dispose();\n    }\n}\n\nexport function disposeOfChildren(children)\n{\n    // console.log('disposeOfChildren:', children.length);\n\n    if(!children) return;\n\n    while(children.length > 0)\n    {\n        disposeOfMesh(children[0]);\n    }\n}\n\nexport function removeAllChildren(object3d)\n{\n    while(object3d.children.length > 0)\n    {\n        object3d.remove(object3d.children[0]);\n    }\n}\n\nexport function moveTowards(object, position, easing)\n{\n    object.position.x += (position.x - object.position.x) * easing;\n    object.position.y += (position.y - object.position.y) * easing;\n    object.position.z += (position.z - object.position.z) * easing;\n}\n\nexport function moveVectorTowards(v1, v2, easing)\n{\n    v1.x += (v2.x - v1.x) * easing;\n    v1.y += (v2.y - v1.y) * easing;\n    v1.z += (v2.z - v1.z) * easing;\n}\n\nexport function rotateTowards(object, rotation, easing)\n{\n    object.rotation.x += (rotation.x - object.rotation.x) * easing;\n    object.rotation.y += (rotation.y - object.rotation.y) * easing;\n    object.rotation.z += (rotation.z - object.rotation.z) * easing;\n}\n\nexport function updateCameraMatrices(camera)\n{\n    camera.updateMatrix();\n    camera.updateMatrixWorld();\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n}\n\nexport function meshIsInView(mesh, camera, frustum)\n{\n    frustum = frustum || new THREE.Frustum();\n    updateCameraMatrices(camera);\n\n    mesh.updateMatrix();\n    mesh.updateMatrixWorld();\n\n    frustum.setFromMatrix( new THREE.Matrix4().multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse ) );\n    return frustum.intersectsObject(mesh);\n}\n\nexport function getMouseIntersection(mouse, camera, objects, raycaster)\n{\n    raycaster = raycaster || new THREE.Raycaster();\n\n    raycaster.setFromCamera(mouse, camera);\n    let intersections = raycaster.intersectObjects(objects);\n    return intersections.length > 0 ? intersections[0] : null;\n}\n\nexport function objectWorldPositionToScreen(object, camera)\n{\n    updateCameraMatrices(camera);\n    object.updateMatrixWorld();\n\n    let width = window.innerWidth, height = window.innerHeight,\n        widthHalf = width / 2, heightHalf = height / 2,\n        vector = new THREE.Vector3().setFromMatrixPosition(object.matrixWorld);\n\n    vector.project(camera);\n    return {\n        x:(vector.x * widthHalf) + widthHalf | 0,\n        y:-(vector.y * heightHalf) + heightHalf | 0\n    };\n}\n\nexport function objectWorldPositionToScreenAlt(object, camera)\n{\n    updateCameraMatrices(camera);\n    object.updateMatrixWorld();\n\n    let width = window.innerWidth, height = window.innerHeight,\n        pos = new THREE.Vector3().setFromMatrixPosition(object.matrixWorld),\n        projScreenMat = new THREE.Matrix4();\n\n        projScreenMat.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n        pos.applyMatrix4(projScreenMat);\n        // pos.applyProjection(projScreenMat);\n\n\n        return {\n            x: ((pos.x + 1) * width / 2) | 0,\n            y: ((-pos.y + 1) * height / 2) | 0\n        };\n}\n\nexport function worldToScreen(position, camera)\n{\n    updateCameraMatrices(camera);\n\n    let width = window.innerWidth, height = window.innerHeight,\n        widthHalf = width / 2, heightHalf = height / 2,\n        vector = new THREE.Vector3().copy(position);\n\n    vector.project(camera);\n    return {\n        x:(vector.x * widthHalf) + widthHalf | 0,\n        y:-(vector.y * heightHalf) + heightHalf | 0\n    };\n\n    // vector.x = ( vector.x * widthHalf ) + widthHalf;\n    // vector.y = - ( vector.y * heightHalf ) + heightHalf;\n    // return vector;\n}\n\nexport function screenToWorld(position, camera)\n{\n    updateCameraMatrices(camera);\n\n    let x = ( position.x / window.innerWidth ) * 2 - 1,\n        y = - ( position.y / window.innerHeight ) * 2 + 1,\n        vector = new THREE.Vector3(x, y, 0.5);\n\n    vector.unproject(camera);\n\n    let dir = vector.sub( camera.position ).normalize(),\n        distance = - camera.position.z / dir.z;\n\n    return camera.position.clone().add( dir.multiplyScalar( distance ) );\n}\n\nexport function screenToWorldAtZ(position, z, camera)\n{\n    // let x = ( position.x / window.innerWidth ) * 2 - 1,\n    //     y = - ( position.y / window.innerHeight ) * 2 + 1,\n    //     planeZ = new THREE.Plane(new THREE.Vector3(0, 0, 1), z),\n    //     vector = new THREE.Vector3(x, y, 0.5),\n    //     projector = new THREE.Projector(),\n    //     raycaster = projector.pickingRay(vector, camera);\n\n    // return raycaster.ray.intersectPlane(planeZ);\n\n    let x = ( position.x / window.innerWidth ) * 2 - 1,\n        y = - ( position.y / window.innerHeight ) * 2 + 1,\n        planeZ = new THREE.Plane(new THREE.Vector3(0, 0, 1), z),\n        vector = new THREE.Vector3(x, y, 0.5),\n        raycaster = new THREE.Raycaster(),\n        pos;\n\n    // raycaster.pickingRay(vector, camera);\n    raycaster.setFromCamera(vector, camera);\n    pos = raycaster.ray.intersectPlane(planeZ);\n    return pos;\n}\n\nexport function getMouseWorldPos(mouseScreenPos, camera)\n{\n    // let vec = new THREE.Vector3(mouseScreenPos.x, mouseScreenPos.y, 0.5).unproject(camera);\n    let vec = mouseScreenPos.clone().unproject(camera);\n    let dir = vec.sub( camera.position ).normalize();\n    let distance = - camera.position.z / dir.z;\n    return camera.position.clone().add( dir.multiplyScalar( distance ) );\n}\n\nexport function getMouseWorldPosAtZ(mouseScreenPos, camera, z)\n{\n    let planeZ = new THREE.Plane(new THREE.Vector3(0, 0, 1), z);\n    // let vec = new THREE.Vector3(mouseScreenPos.x, mouseScreenPos.y, 0.5);\n    let vec = mouseScreenPos;\n    let raycaster = new THREE.Raycaster();\n    raycaster.pickingRay(vec, camera);\n    let pos = raycaster.ray.intersectPlane(planeZ);\n    return pos;\n}\n\nexport function getEdges(mesh)\n{\n    let edge = [ 0, 0 ],\n        hash = {}\n        keys = [ 'a', 'b', 'c' ],\n        geometry2,\n        thresholdDot = Math.cos( THREE.Math.degToRad( 1 ) );\n\n    let sortFunction = function ( a, b ) { return a - b; };\n\n    if ( mesh.geometry instanceof THREE.BufferGeometry ) {\n        geometry2 = new THREE.Geometry();\n        geometry2.fromBufferGeometry( mesh.geometry );\n    } else {\n        geometry2 = mesh.geometry.clone();\n    }\n    geometry2.mergeVertices();\n    geometry2.computeFaceNormals();\n\n    let vertices = geometry2.vertices,\n        faces = geometry2.faces,\n        facesOriginal = mesh.geometry.faces,\n        key;\n\n    for ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n        let face = faces[ i ];\n\n        for ( let j = 0; j < 3; j ++ ) {\n\n            edge[ 0 ] = face[ keys[ j ] ];\n            edge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n            edge.sort( sortFunction );\n\n            key = edge.toString();\n\n            if ( hash[ key ] === undefined ) {\n                hash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\n            } else {\n                hash[ key ].face2 = i;\n            }\n        }\n    }\n\n    let edges = [];\n\n    for ( key in hash ) {\n        let h = hash[ key ];\n        if ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot )\n        {\n            edges.push({\n                vertex1:vertices[ h.vert1 ],\n                vertex2:vertices[ h.vert2 ],\n                // face1:faces[ h.face1 ],\n                // face2:faces[ h.face2 ],\n                face1:facesOriginal[ h.face1 ],\n                face2:facesOriginal[ h.face2 ],\n                faceIndex1: h.face1,\n                faceIndex2: h.face2\n            });\n        }\n    }\n\n    return edges;\n}\n\nexport function addFragmentFogInjections(fragmentShader)\n{\n    let lines = fragmentShader.split('\\n'),\n        len = lines.length;\n\n    for(let i = 0; i < len; i++)\n    {\n        if(lines[i] === '/*#FOG_INJECTION_1#*/'){\n            lines[i] = THREE.ShaderChunk['fog_pars_fragment'];\n        }else if(lines[i] === '/*#FOG_INJECTION_2#*/'){\n            lines[i] = THREE.ShaderChunk['fog_fragment'];\n        }\n    }\n    return lines.join('\\n');\n}\n\nexport function pointOnSphere(r, a1, a2)\n{\n    return {\n        x: r * Math.cos(a1) * Math.sin(a2),\n        y: r * Math.sin(a1) * Math.sin(a2),\n        z: r * Math.cos(a2)\n    };\n}\n\nexport function getPointsOnSphere(n)\n{\n    let pts = [],\n        pt;\n\n    for(let i = 0; i < n; i++)\n    {\n        pt = pointOnSphere(1, Math.random() * Math.PI * 2, Math.random() * Math.PI * 2);\n        pts.push(new THREE.Vector3( pt.x, pt.y, pt.z ));\n    }\n\n    return pts;\n}\n\nexport function getPointsWithinSphere(n, maxRadius)\n{\n    let pts = [],\n        pt;\n\n    for(let i = 0; i < n; i++)\n    {\n        pt = pointOnSphere(Math.random() * maxRadius, Math.random() * Math.PI * 2, Math.random() * Math.PI * 2);\n        pts.push(new THREE.Vector3( pt.x, pt.y, pt.z ));\n    }\n\n    return pts;\n}\n\nexport function getPointsOnSphereEvenly(n)\n{\n    let pts = [],\n        inc = Math.PI * (3 - Math.sqrt(5)),\n        off = 2.0 / n,\n        x, y, z, r,\n        phi;\n\n    for (let k = 0; k < n; k++){\n        y = k * off - 1 + (off /2);\n        r = Math.sqrt(1 - y * y);\n        phi = k * inc;\n        x = Math.cos(phi) * r;\n        z = Math.sin(phi) * r;\n\n        pts.push(new THREE.Vector3( x, y, z ));\n    }\n    return pts;\n}\n\nexport function getRandomVector3(min, max)\n{\n    return new THREE.Vector3(randomRange(min, max), randomRange(min, max), randomRange(min, max));\n}\n\nexport function addRandomVector3(vec, min, max)\n{\n    return getRandomVector3(min, max).add(vec);\n}\n\nexport function rotationInDegrees(rotation)\n{\n    let degrees = 180 / Math.PI;\n    return new THREE.Euler(rotation.x * degrees, rotation.y * degrees, rotation.z * degrees, rotation.order);\n}\n\nexport function loadJSONGeometry(manifest, callback)\n{\n    let loader = new THREE.JSONLoader(),\n        len = manifest.length,\n        loaded = 0,\n        file,\n        id,\n        geometriesById = {}\n        geometries = [];\n\n    let load = function()\n    {\n        file = (manifest[loaded].file !== undefined) ? manifest[loaded].file : manifest[loaded];\n        id = (manifest[loaded].id !== undefined) ? manifest[loaded].id : null;\n        loader.load(file, function(g){\n            if(id)\n            {\n                geometriesById[id] = g;\n            }\n            geometries.push({geometry:g, id:id});\n            loaded++;\n            if(loaded === len)\n            {\n                if(typeof callback === 'function')\n                {\n                    callback(geometries, geometriesById);\n                }\n            }\n            else\n            {\n                load();\n            }\n        });\n    };\n\n    load();\n}\n\nexport function loadTextures(manifest, callback)\n{\n    let len = manifest.length,\n        loaded = 0,\n        file,\n        id,\n        texturesById = {}\n        textures = [],\n        loader = new THREE.TextureLoader();\n\n    loader.crossOrigin = \"\";\n\n    let load = function()\n    {\n        file = (manifest[loaded].file !== undefined) ? manifest[loaded].file : manifest[loaded];\n        id = (manifest[loaded].id !== undefined) ? manifest[loaded].id : null;\n\n        loader.load(file, function(tex){\n            if(id)\n            {\n                texturesById[id] = tex;\n            }\n            textures.push({texture:tex, id:id});\n            loaded++;\n            if(loaded === len)\n            {\n                if(typeof callback === 'function')\n                {\n                    callback(textures, texturesById);\n                }\n            }\n            else\n            {\n                load();\n            }\n        });\n\n        // THREE.ImageUtils.loadTexture(file, undefined, function(tex){\n        //     if(id)\n        //     {\n        //         texturesById[id] = tex;\n        //     }\n        //     textures.push({texture:tex, id:id});\n        //     loaded++;\n        //     if(loaded === len)\n        //     {\n        //         if(typeof callback === 'function')\n        //         {\n        //             callback(textures, texturesById);\n        //         }\n        //     }\n        //     else\n        //     {\n        //         load();\n        //     }\n        // });\n    };\n\n    load();\n}\n\nexport function setTextureWrapping(textures, wrapping)\n{\n    for(let i = 0; i < textures.length; i++)\n    {\n        textures[i].wrapS = textures[i].wrapT = wrapping;\n        textures[i].needsUpdate = true;\n    }\n}\n\nexport function setTextureMipmapping(textures, mipmapping)\n{\n    for(let i = 0; i < textures.length; i++)\n    {\n        textures[i].generateMipmaps = mipmapping;\n        textures[i].needsUpdate = true;\n    }\n}\n\nexport function setTextureMinMagFilters(textures, minFilter, magFilter)\n{\n    for(let i = 0; i < textures.length; i++)\n    {\n        if(minFilter)\n            textures[i].minFilter = minFilter;\n\n        if(magFilter)\n            textures[i].magFilter = magFilter;\n\n        textures[i].needsUpdate = true;\n    }\n}\n\nexport function injectShaderCode(original, key, injection)\n{\n    if(Object.prototype.toString.call(injection) === '[object Array]')\n    {\n        let replacement = '';\n        for(let i = 0; i < injection.length; i++)\n        {\n            replacement += injection[i] + '\\n';\n        }\n\n        return original.replace(key, replacement);\n    }\n    else\n    {\n        return original.replace(key, injection);\n    }\n}\n\nexport function logVector(vector)\n{\n    console.log(vector.x, vector.y, vector.z);\n}\n\n// usage: pass renderer.getContext() & mesh.material.program.program, call render at least once first.\nexport function logProgramInfo(gl, program) {\n    let result = {\n        attributes: [],\n        uniforms: [],\n        attributeCount: 0,\n        uniformCount: 0\n    }\n    activeUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS),\n    activeAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    // Taken from the WebGl spec:\n    // http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14\n    let enums = {\n        0x8B50: 'FLOAT_VEC2',\n        0x8B51: 'FLOAT_VEC3',\n        0x8B52: 'FLOAT_VEC4',\n        0x8B53: 'INT_VEC2',\n        0x8B54: 'INT_VEC3',\n        0x8B55: 'INT_VEC4',\n        0x8B56: 'BOOL',\n        0x8B57: 'BOOL_VEC2',\n        0x8B58: 'BOOL_VEC3',\n        0x8B59: 'BOOL_VEC4',\n        0x8B5A: 'FLOAT_MAT2',\n        0x8B5B: 'FLOAT_MAT3',\n        0x8B5C: 'FLOAT_MAT4',\n        0x8B5E: 'SAMPLER_2D',\n        0x8B60: 'SAMPLER_CUBE',\n        0x1400: 'BYTE',\n        0x1401: 'UNSIGNED_BYTE',\n        0x1402: 'SHORT',\n        0x1403: 'UNSIGNED_SHORT',\n        0x1404: 'INT',\n        0x1405: 'UNSIGNED_INT',\n        0x1406: 'FLOAT'\n    };\n\n    // Loop through active uniforms\n    for (let i=0; i < activeUniforms; i++) {\n        let uniform = gl.getActiveUniform(program, i);\n        uniform.typeName = enums[uniform.type];\n        result.uniforms.push(uniform);\n        result.uniformCount += uniform.size;\n    }\n\n    // Loop through active attributes\n    for (i=0; i < activeAttributes; i++) {\n        let attribute = gl.getActiveAttrib(program, i);\n        attribute.typeName = enums[attribute.type];\n        result.attributes.push(attribute);\n        result.attributeCount += attribute.size;\n    }\n\n    console.log(result);\n}\n","'use strict';\n\nexport function createElement(type, classNames, content){\n    type = type || 'div';\n    let el = document.createElement(type);\n    if(classNames){\n        classNames.forEach(function(name){\n            el.classList.add(name);\n        });\n    }\n    if(content) el.innerHTML = content;\n    return el;\n}\n\nexport function normalize(value, min, max) {\n    return (value - min) / (max - min);\n}\n\nexport function lerp(norm, min, max) {\n    return (max - min) * norm + min;\n}\n\nexport function map(value, sourceMin, sourceMax, destMin, destMax) {\n    return lerp(normalize(value, sourceMin, sourceMax), destMin, destMax);\n}\n\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, Math.min(min, max)), Math.max(min, max));\n}\n\nexport function distance(p0, p1) {\n    let dx = p1.x - p0.x,\n        dy = p1.y - p0.y;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport function distanceXY(x0, y0, x1, y1) {\n    let dx = x1 - x0,\n        dy = y1 - y0;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport function circleCollision(c0, c1) {\n    return distance(c0, c1) <= c0.radius + c1.radius;\n}\n\nexport function circlePointCollision(x, y, circle) {\n    return distanceXY(x, y, circle.x, circle.y) < circle.radius;\n}\n\nexport function pointInRect(x, y, rect) {\n    return inRange(x, rect.x, rect.x + rect.width) &&\n           inRange(y, rect.y, rect.y + rect.height);\n}\n\nexport function inRange(value, min, max) {\n    return value >= Math.min(min, max) && value <= Math.max(min, max);\n}\n\nexport function rangeIntersect(min0, max0, min1, max1) {\n    return Math.max(min0, max0) >= Math.min(min1, max1) &&\n           Math.min(min0, max0) <= Math.max(min1, max1);\n}\n\nexport function rectIntersect(r0, r1) {\n    return rangeIntersect(r0.x, r0.x + r0.width, r1.x, r1.x + r1.width) &&\n           rangeIntersect(r0.y, r0.y + r0.height, r1.y, r1.y + r1.height);\n}\n\nexport function degreesToRads(degrees) {\n    return degrees / 180 * Math.PI;\n}\n\nexport function radsToDegrees(radians) {\n    return radians * 180 / Math.PI;\n}\n\nexport function angleBetweenPoints(p1, p2){\n    return Math.atan2(p2.y - p1.y, p2.x - p1.x);\n}\n\nexport function randomRange(min, max) {\n    return min + Math.random() * (max - min);\n}\n\nexport function randomInt(min, max) {\n    return Math.floor(min + Math.random() * (max - min + 1));\n}\n\nexport function roundToPlaces(value, places) {\n    let mult = Math.pow(10, places);\n    return Math.round(value * mult) / mult;\n}\n\nexport function roundNearest(value, nearest) {\n    return Math.round(value / nearest) * nearest;\n}\n\nexport function quadraticBezier(p0, p1, p2, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 2) * p0.x +\n               (1 - t) * 2 * t * p1.x +\n               t * t * p2.x;\n    pFinal.y = Math.pow(1 - t, 2) * p0.y +\n               (1 - t) * 2 * t * p1.y +\n               t * t * p2.y;\n    return pFinal;\n}\n\nexport function cubicBezier(p0, p1, p2, p3, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 3) * p0.x +\n               Math.pow(1 - t, 2) * 3 * t * p1.x +\n               (1 - t) * 3 * t * t * p2.x +\n               t * t * t * p3.x;\n    pFinal.y = Math.pow(1 - t, 3) * p0.y +\n               Math.pow(1 - t, 2) * 3 * t * p1.y +\n               (1 - t) * 3 * t * t * p2.y +\n               t * t * t * p3.y;\n    return pFinal;\n}\n\nexport function multicurve(points, context) {\n    let p0, p1, midx, midy;\n\n    context.moveTo(points[0].x, points[0].y);\n\n    for(let i = 1; i < points.length - 2; i += 1) {\n        p0 = points[i];\n        p1 = points[i + 1];\n        midx = (p0.x + p1.x) / 2;\n        midy = (p0.y + p1.y) / 2;\n        context.quadraticCurveTo(p0.x, p0.y, midx, midy);\n    }\n\n    p0 = points[points.length - 2];\n    p1 = points[points.length - 1];\n    context.quadraticCurveTo(p0.x, p0.y, p1.x, p1.y);\n}\n\nexport function pointOnSphere(r, a1, a2) {\n    return {\n        x: r * Math.cos(a1) * Math.sin(a2),\n        y: r * Math.sin(a1) * Math.sin(a2),\n        z: r * Math.cos(a2)\n    };\n}\n\nexport function getPointsOnSphere(n){\n    let pts = [],\n        pt;\n\n    for(let i = 0; i < n; i++)\n    {\n        pt = pointOnSphere(1, Math.random() * Math.PI * 2, Math.random() * Math.PI * 2);\n        pts.push({x:pt.x, y:pt.y, z:pt.z});\n    }\n\n    return pts;\n}\n\nexport function getPointsOnSphereEvenly(n){\n    let pts = [],\n        inc = Math.PI * (3 - Math.sqrt(5)),\n        off = 2.0 / n,\n        x, y, z, r,\n        phi;\n\n    for (let k = 0; k < n; k++){\n        y = k * off - 1 + (off /2);\n        r = Math.sqrt(1 - y * y);\n        phi = k * inc;\n        x = Math.cos(phi) * r;\n        z = Math.sin(phi) * r;\n\n        pts.push({x:x, y:y, z:z});\n    }\n    return pts;\n}\n\nexport function clone(obj){\n    return JSON.parse(JSON.stringify(obj));\n}\n\nexport function isArray(arg){\n    return Object.prototype.toString.call(arg) === '[object Array]';\n}\n\nexport function shuffleArray(array) {\n    let currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n\n    while (0 !== currentIndex)\n    {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n}\n\nexport function thinOutArray(array, n){\n    let newArray = [],\n        len = array.length;\n\n    for(let i = 0; i < len; i += n)\n    {\n        newArray.push(array[i]);\n    }\n\n    return newArray;\n}\n\nexport function randomItemFromArray(array){\n    return array[Math.random() * array.length | 0];\n}\n\nexport function arrayRestrictedToRangeZ(array, minZ, maxZ){\n    let newArray = [],\n        len = array.length;\n\n    for(let i = 0; i < len; i++)\n    {\n        if(inRange(array[i].z, minZ, maxZ))\n            newArray.push(array[i]);\n    }\n\n    return newArray;\n}\n\nexport function extractKeyFromArray(array, key)\n{\n    let a = [];\n    for(let i = 0; i < array.length; i++)\n    {\n        a.push(array[i][key]);\n    }\n    return a;\n}\n\nexport function repeat(callback, params, intervals, delay, startDelay){\n    startDelay = startDelay || 0;\n    let i = 0;\n    let doStuff = function(){\n        setTimeout(function(){\n            callback(params);\n            i++;\n            if(i < intervals)\n                doStuff();\n        }, delay);\n    };\n    setTimeout(function(){\n        doStuff();\n    }, startDelay);\n}\n\nexport function isOpera(){\n    // Opera 8.0+ (UA detection to detect Blink/v8-powered Opera)\n    return !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n}\n\nexport function isFirefox(){\n    // Firefox 1.0+\n    return typeof InstallTrigger !== 'undefined';\n}\n\nexport function isSafari(){\n    // At least Safari 3+: '[object HTMLElementConstructor]'\n    return Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0;\n}\n\nexport function isChrome(){\n    // Chrome 1+\n    return !!window.chrome && !isOpera();\n}\n\nexport function isIE(){\n    // At least IE6\n    return false || !!document.documentMode;\n}\n\nexport function isMac() {\n    return navigator.platform.toLowerCase().indexOf('mac') > -1;\n}\n\nexport function isWindows() {\n    return navigator.platform.toLowerCase().indexOf('win') > -1;\n}\n\nexport function hasWebGL(){\n    if (!!window.WebGLRenderingContext) {\n        let canvas = document.createElement('canvas'),\n            names = ['webgl', 'experimental-webgl', 'moz-webgl', 'webkit-3d'],\n            context = false;\n\n        for(let i=0;i<4;i++) {\n            try {\n                context = canvas.getContext(names[i]);\n                if (context && typeof context.getParameter === 'function') {\n                    // WebGL is enabled\n                    return true;\n                }\n            } catch(e) {}\n        }\n        // WebGL is supported, but disabled\n        return false;\n    }\n    // WebGL not supported\n    return false;\n}\n\nexport function getVideoType(file)\n{\n    if(file.indexOf('.mp4') !== -1)\n        return 'video/mp4';\n    else if(file.indexOf('.webm') !== -1)\n        return 'video/webm';\n    else if(file.indexOf('.ogg') !== -1)\n        return 'video/ogg';\n}\n\nexport function dispatchEvent(eventName, config)\n{\n    config = config || null;\n\n    let event;\n\n    if(!isIE())\n    {\n        event = new CustomEvent(eventName, {\n            detail: config\n        });\n        document.dispatchEvent(event);\n    }\n    else\n    {\n        event = document.createEvent('CustomEvent');\n        event.initCustomEvent(eventName, true, false, config);\n        document.dispatchEvent(event);\n    }\n}\n\nexport function setCursor(cursor, element)\n{\n    element = element || document.body;\n\n    if(element.style.cursor !== cursor)\n    {\n        element.style.cursor = cursor;\n    }\n}\n\nexport function getParameterByName(name)\n{\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n    let regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n        results = regex.exec(location.search);\n    return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n}\n"],"sourceRoot":"/source/"}